import { __decorate, __metadata } from 'tslib';
import { CommonModule } from '@angular/common';
import { Injectable, EventEmitter, ViewChild, Input, Output, HostListener, Component, ChangeDetectionStrategy, ChangeDetectorRef, TemplateRef, ContentChild, Pipe, NgModule } from '@angular/core';
import { moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';
import { PaginationControlsDirective, NgxPaginationModule } from 'ngx-pagination';
import { from, Subject } from 'rxjs';
import { groupBy, flatMap, reduce, takeUntil, throttleTime, filter } from 'rxjs/operators';
import { ScrollDispatcher, CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-pagination';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/cdk/scrolling';
import * as ɵngcc4 from '@angular/cdk/drag-drop';

const _c0 = ["paginationDirective"];
const _c1 = ["paginationRange"];
function PaginationComponent_li_5_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 13);
    ɵngcc0.ɵɵlistener("keyup.enter", function PaginationComponent_li_5_a_1_Template_a_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.previous(); })("click", function PaginationComponent_li_5_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.previous(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "span", 14);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r5.previousLabel + " " + ctx_r5.screenReaderPageLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r5.previousLabel, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r5.screenReaderPageLabel);
} }
function PaginationComponent_li_5_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "span", 14);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r6.previousLabel, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r6.screenReaderPageLabel);
} }
function PaginationComponent_li_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 10);
    ɵngcc0.ɵɵtemplate(1, PaginationComponent_li_5_a_1_Template, 4, 3, "a", 11);
    ɵngcc0.ɵɵtemplate(2, PaginationComponent_li_5_span_2_Template, 4, 2, "span", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassProp("disabled", _r0.isFirstPage());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", 1 < _r0.getCurrent());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.isFirstPage());
} }
function PaginationComponent_li_8_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 13);
    ɵngcc0.ɵɵlistener("keyup.enter", function PaginationComponent_li_8_a_1_Template_a_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const page_r10 = ɵngcc0.ɵɵnextContext().$implicit; ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.setCurrent(page_r10.value); })("click", function PaginationComponent_li_8_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const page_r10 = ɵngcc0.ɵɵnextContext().$implicit; ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.setCurrent(page_r10.value); });
    ɵngcc0.ɵɵelementStart(1, "span", 14);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const page_r10 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r11 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("", ctx_r11.screenReaderPageLabel, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(page_r10.label);
} }
function PaginationComponent_li_8_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 14);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const page_r10 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r12 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("", ctx_r12.screenReaderCurrentLabel, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(page_r10.label);
} }
function PaginationComponent_li_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵtemplate(1, PaginationComponent_li_8_a_1_Template, 5, 2, "a", 11);
    ɵngcc0.ɵɵtemplate(2, PaginationComponent_li_8_ng_container_2_Template, 5, 2, "ng-container", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const page_r10 = ctx.$implicit;
    ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassProp("current", _r0.getCurrent() === page_r10.value)("ellipsis", page_r10.label === "...");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.getCurrent() !== page_r10.value);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.getCurrent() === page_r10.value);
} }
function PaginationComponent_li_9_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 13);
    ɵngcc0.ɵɵlistener("keyup.enter", function PaginationComponent_li_9_a_1_Template_a_keyup_enter_0_listener() { ɵngcc0.ɵɵrestoreView(_r23); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.next(); })("click", function PaginationComponent_li_9_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r23); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(3); return _r0.next(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "span", 14);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r20 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵattribute("aria-label", ctx_r20.nextLabel + " " + ctx_r20.screenReaderPageLabel);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r20.nextLabel, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r20.screenReaderPageLabel);
} }
function PaginationComponent_li_9_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementStart(2, "span", 14);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r21 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r21.nextLabel, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r21.screenReaderPageLabel);
} }
function PaginationComponent_li_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 15);
    ɵngcc0.ɵɵtemplate(1, PaginationComponent_li_9_a_1_Template, 4, 3, "a", 11);
    ɵngcc0.ɵɵtemplate(2, PaginationComponent_li_9_span_2_Template, 4, 2, "span", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵclassProp("disabled", _r0.isLastPage());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !_r0.isLastPage());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.isLastPage());
} }
function PaginationComponent_div_10_ul_7_li_1_Template(rf, ctx) { if (rf & 1) {
    const _r30 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 25);
    ɵngcc0.ɵɵlistener("click", function PaginationComponent_div_10_ul_7_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r30); const limit_r28 = ctx.$implicit; const ctx_r29 = ɵngcc0.ɵɵnextContext(3); return ctx_r29.changeLimit(limit_r28, false); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const limit_r28 = ctx.$implicit;
    const ctx_r27 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassProp("ngx-pagination-range--selected", limit_r28 === ctx_r27.selectedLimit);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(limit_r28);
} }
function PaginationComponent_div_10_ul_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 23);
    ɵngcc0.ɵɵtemplate(1, PaginationComponent_div_10_ul_7_li_1_Template, 3, 3, "li", 24);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r26 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r26.ranges);
} }
function PaginationComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r32 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 16, 17);
    ɵngcc0.ɵɵelementStart(2, "div", 18);
    ɵngcc0.ɵɵelementStart(3, "div", 19);
    ɵngcc0.ɵɵelementStart(4, "div", 20);
    ɵngcc0.ɵɵlistener("click", function PaginationComponent_div_10_Template_div_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r32); const ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31.showRange = !ctx_r31.showRange; });
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelement(6, "i", 21);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, PaginationComponent_div_10_ul_7_Template, 2, 1, "ul", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("ngx-table__table--dark-pagination-range", ctx_r4.config.tableLayout.theme === "dark");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.selectedLimit, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.showRange);
} }
const _c2 = ["paginationComponent"];
const _c3 = ["contextMenu"];
const _c4 = function (a1, a2) { return { position: "absolute", top: a1, left: a2 }; };
const _c5 = function (a0) { return { $implicit: a0 }; };
function BaseComponent_tbody_3_ng_container_1_ul_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 9);
    ɵngcc0.ɵɵelementContainer(1, 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(3, _c4, ctx_r9.rowContextMenuPosition.top, ctx_r9.rowContextMenuPosition.left));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r9.rowContextMenu)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(6, _c5, ctx_r9.rowContextMenuPosition.value));
} }
function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_span_1_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const rowIndex_r14 = ɵngcc0.ɵɵnextContext(2).index; const ctx_r19 = ɵngcc0.ɵɵnextContext(4); return ctx_r19.collapseRow(rowIndex_r14); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r14 = ɵngcc0.ɵɵnextContext(2).index;
    const ctx_r18 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r18.isRowCollapsed(rowIndex_r14) ? "ngx-icon-arrow-down" : "ngx-icon-arrow-right");
} }
function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_span_1_Template, 1, 1, "span", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r16.arrowDefinition);
} }
const _c6 = function (a0, a1) { return { $implicit: a0, index: a1 }; };
function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_tr_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td");
    ɵngcc0.ɵɵelementContainer(2, 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r23 = ɵngcc0.ɵɵnextContext();
    const row_r13 = ctx_r23.$implicit;
    const rowIndex_r14 = ctx_r23.index;
    const ctx_r17 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("colspan", ctx_r17.columns.length + 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r17.detailsTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(3, _c6, row_r13, rowIndex_r14));
} }
function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r25 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "tr", 12, 13);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template_tr_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const row_r13 = ctx.$implicit; const rowIndex_r14 = ctx.index; const ctx_r24 = ɵngcc0.ɵɵnextContext(4); return ctx_r24.onClick($event, row_r13, "", null, rowIndex_r14); })("contextmenu", function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template_tr_contextmenu_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const row_r13 = ctx.$implicit; const rowIndex_r14 = ctx.index; const ctx_r26 = ɵngcc0.ɵɵnextContext(4); return ctx_r26.onRowContextMenu($event, row_r13, "", null, rowIndex_r14); })("dblclick", function BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template_tr_dblclick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const row_r13 = ctx.$implicit; const rowIndex_r14 = ctx.index; const ctx_r27 = ɵngcc0.ɵɵnextContext(4); return ctx_r27.onDoubleClick($event, row_r13, "", null, rowIndex_r14); });
    ɵngcc0.ɵɵelementContainer(3, 10);
    ɵngcc0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_td_4_Template, 2, 1, "td", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_tr_5_Template, 3, 6, "tr", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const row_r13 = ctx.$implicit;
    const rowIndex_r14 = ctx.index;
    const ctx_r12 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("ngx-table__table-row--selected", rowIndex_r14 === ctx_r12.selectedRow && !ctx_r12.config.selectCell);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r12.rowTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(6, _c6, row_r13, rowIndex_r14));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12.config.detailsTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r12.config.detailsTemplate && ctx_r12.selectedDetailsTemplateRowId.has(rowIndex_r14) || ctx_r12.config.collapseAllRows);
} }
const _c7 = function (a0, a1, a2, a3) { return { itemsPerPage: a0, currentPage: a1, totalItems: a2, id: a3 }; };
function BaseComponent_tbody_3_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_ng_container_2_ng_container_1_Template, 6, 9, "ng-container", 11);
    ɵngcc0.ɵɵpipe(2, "paginate");
    ɵngcc0.ɵɵpipe(3, "global");
    ɵngcc0.ɵɵpipe(4, "search");
    ɵngcc0.ɵɵpipe(5, "sort");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(2, 1, ɵngcc0.ɵɵpipeBind3(3, 4, ɵngcc0.ɵɵpipeBind3(4, 8, ɵngcc0.ɵɵpipeBind2(5, 12, ctx_r10.data, ctx_r10.sortBy), ctx_r10.term, ctx_r10.filteredCountSubject), ctx_r10.globalSearchTerm, ctx_r10.filteredCountSubject), ɵngcc0.ɵɵpureFunction4(15, _c7, ctx_r10.limit, ctx_r10.page, ctx_r10.count, ctx_r10.id)));
} }
function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r37 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_span_1_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r37); const rowIndex_r30 = ɵngcc0.ɵɵnextContext(2).index; const ctx_r35 = ɵngcc0.ɵɵnextContext(4); return ctx_r35.collapseRow(rowIndex_r30); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r30 = ɵngcc0.ɵɵnextContext(2).index;
    const ctx_r34 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r34.isRowCollapsed(rowIndex_r30) ? "ngx-icon-arrow-down" : "ngx-icon-arrow-right");
} }
function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_span_1_Template, 1, 1, "span", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r32 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r32.arrowDefinition);
} }
function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_tr_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵelementStart(1, "td");
    ɵngcc0.ɵɵelementContainer(2, 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r39 = ɵngcc0.ɵɵnextContext();
    const row_r29 = ctx_r39.$implicit;
    const rowIndex_r30 = ctx_r39.index;
    const ctx_r33 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("colspan", ctx_r33.columns.length + 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r33.detailsTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(3, _c6, row_r29, rowIndex_r30));
} }
function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "tr", 12, 13);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template_tr_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r41); const row_r29 = ctx.$implicit; const rowIndex_r30 = ctx.index; const ctx_r40 = ɵngcc0.ɵɵnextContext(4); return ctx_r40.onClick($event, row_r29, "", null, rowIndex_r30); })("contextmenu", function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template_tr_contextmenu_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r41); const row_r29 = ctx.$implicit; const rowIndex_r30 = ctx.index; const ctx_r42 = ɵngcc0.ɵɵnextContext(4); return ctx_r42.onRowContextMenu($event, row_r29, "", null, rowIndex_r30); })("dblclick", function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template_tr_dblclick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r41); const row_r29 = ctx.$implicit; const rowIndex_r30 = ctx.index; const ctx_r43 = ɵngcc0.ɵɵnextContext(4); return ctx_r43.onDoubleClick($event, row_r29, "", null, rowIndex_r30); });
    ɵngcc0.ɵɵelementContainer(3, 10);
    ɵngcc0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_td_4_Template, 2, 1, "td", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_tr_5_Template, 3, 6, "tr", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const row_r29 = ctx.$implicit;
    const rowIndex_r30 = ctx.index;
    const ctx_r28 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("ngx-table__table-row--selected", rowIndex_r30 === ctx_r28.selectedRow && !ctx_r28.config.selectCell);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r28.rowTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(6, _c6, row_r29, rowIndex_r30));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r28.config.detailsTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r28.config.detailsTemplate && ctx_r28.selectedDetailsTemplateRowId.has(rowIndex_r30) || ctx_r28.config.collapseAllRows);
} }
function BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "cdk-virtual-scroll-viewport", 16);
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_ng_container_1_Template, 6, 9, "ng-container", 17);
    ɵngcc0.ɵɵpipe(2, "global");
    ɵngcc0.ɵɵpipe(3, "search");
    ɵngcc0.ɵɵpipe(4, "sort");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkVirtualForOf", ɵngcc0.ɵɵpipeBind3(2, 1, ɵngcc0.ɵɵpipeBind3(3, 5, ɵngcc0.ɵɵpipeBind2(4, 9, ctx_r11.data, ctx_r11.sortBy), ctx_r11.term, ctx_r11.filteredCountSubject), ctx_r11.globalSearchTerm, ctx_r11.filteredCountSubject));
} }
function BaseComponent_tbody_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_ul_1_Template, 2, 8, "ul", 7);
    ɵngcc0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_1_ng_container_2_Template, 6, 20, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_1_cdk_virtual_scroll_viewport_3_Template, 5, 12, "cdk-virtual-scroll-viewport", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.rowContextMenuPosition.top);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r6.config.infiniteScroll);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.config.infiniteScroll);
} }
function BaseComponent_tbody_3_ng_container_2_ul_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 9);
    ɵngcc0.ɵɵelementContainer(1, 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r44 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpureFunction2(3, _c4, ctx_r44.rowContextMenuPosition.top, ctx_r44.rowContextMenuPosition.left));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r44.rowContextMenu)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(6, _c5, ctx_r44.rowContextMenuPosition.value));
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_2_Template(rf, ctx) { if (rf & 1) {
    const _r56 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "label", 18);
    ɵngcc0.ɵɵelementStart(2, "input", 19);
    ɵngcc0.ɵɵlistener("change", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_2_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r56); const ctx_r57 = ɵngcc0.ɵɵnextContext(); const row_r48 = ctx_r57.$implicit; const rowIndex_r49 = ctx_r57.index; const ctx_r55 = ɵngcc0.ɵɵnextContext(4); return ctx_r55.onCheckboxSelect($event, row_r48, rowIndex_r49); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "em", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r49 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r50 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "checkbox-", rowIndex_r49, "");
    ɵngcc0.ɵɵproperty("checked", ctx_r50.isSelected || ctx_r50.selectedCheckboxes.has(rowIndex_r49));
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_3_Template(rf, ctx) { if (rf & 1) {
    const _r60 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "label");
    ɵngcc0.ɵɵelementStart(2, "input", 21);
    ɵngcc0.ɵɵlistener("change", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_3_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r60); const ctx_r61 = ɵngcc0.ɵɵnextContext(); const row_r48 = ctx_r61.$implicit; const rowIndex_r49 = ctx_r61.index; const ctx_r59 = ɵngcc0.ɵɵnextContext(4); return ctx_r59.onRadioSelect($event, row_r48, rowIndex_r49); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r49 = ɵngcc0.ɵɵnextContext().index;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "radio-", rowIndex_r49, "");
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "render");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r63 = ɵngcc0.ɵɵnextContext().$implicit;
    const row_r48 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, row_r48, column_r63.key));
} }
const _c8 = function (a0, a1, a2) { return { $implicit: a0, rowIndex: a1, column: a2 }; };
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 10);
} if (rf & 2) {
    const column_r63 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r71 = ɵngcc0.ɵɵnextContext();
    const row_r48 = ctx_r71.$implicit;
    const rowIndex_r49 = ctx_r71.index;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", column_r63.cellTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c8, row_r48, rowIndex_r49, column_r63));
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r73 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "td", 22, 13);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template_td_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r73); const column_r63 = ctx.$implicit; const colIndex_r64 = ctx.index; const ctx_r74 = ɵngcc0.ɵɵnextContext(); const row_r48 = ctx_r74.$implicit; const rowIndex_r49 = ctx_r74.index; const ctx_r72 = ɵngcc0.ɵɵnextContext(4); return ctx_r72.onClick($event, row_r48, column_r63.key, colIndex_r64, rowIndex_r49); })("contextmenu", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template_td_contextmenu_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r73); const column_r63 = ctx.$implicit; const colIndex_r64 = ctx.index; const ctx_r76 = ɵngcc0.ɵɵnextContext(); const row_r48 = ctx_r76.$implicit; const rowIndex_r49 = ctx_r76.index; const ctx_r75 = ɵngcc0.ɵɵnextContext(4); return ctx_r75.onRowContextMenu($event, row_r48, column_r63.key, colIndex_r64, rowIndex_r49); })("dblclick", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template_td_dblclick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r73); const column_r63 = ctx.$implicit; const colIndex_r64 = ctx.index; const ctx_r78 = ɵngcc0.ɵɵnextContext(); const row_r48 = ctx_r78.$implicit; const rowIndex_r49 = ctx_r78.index; const ctx_r77 = ɵngcc0.ɵɵnextContext(4); return ctx_r77.onDoubleClick($event, row_r48, column_r63.key, colIndex_r64, rowIndex_r49); });
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_div_3_Template, 3, 4, "div", 3);
    ɵngcc0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_ng_container_4_Template, 1, 6, "ng-container", 23);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r63 = ctx.$implicit;
    const colIndex_r64 = ctx.index;
    const rowIndex_r49 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r52 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("left", ctx_r52.styleService.pinnedWidth(column_r63.pinned, colIndex_r64));
    ɵngcc0.ɵɵclassProp("pinned-left", column_r63.pinned)("ngx-table__table-col--selected", colIndex_r64 === ctx_r52.selectedCol && !ctx_r52.config.selectCell)("ngx-table__table-cell--selected", colIndex_r64 === ctx_r52.selectedCol && rowIndex_r49 === ctx_r52.selectedRow && !ctx_r52.config.selectCol && !ctx_r52.config.selectRow);
    ɵngcc0.ɵɵproperty("ngClass", column_r63.cssClass ? column_r63.cssClass.name : "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !column_r63.cellTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r63.cellTemplate);
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r83 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_span_1_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r83); const rowIndex_r49 = ɵngcc0.ɵɵnextContext(2).index; const ctx_r81 = ɵngcc0.ɵɵnextContext(4); return ctx_r81.collapseRow(rowIndex_r49); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r49 = ɵngcc0.ɵɵnextContext(2).index;
    const ctx_r80 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r80.isRowCollapsed(rowIndex_r49) ? "ngx-icon-arrow-down" : "ngx-icon-arrow-right");
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_span_1_Template, 1, 1, "span", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r53 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r53.arrowDefinition);
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_tr_6_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td");
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_tr_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_tr_6_td_1_Template, 1, 0, "td", 3);
    ɵngcc0.ɵɵelementStart(2, "td");
    ɵngcc0.ɵɵelementContainer(3, 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r86 = ɵngcc0.ɵɵnextContext();
    const row_r48 = ctx_r86.$implicit;
    const rowIndex_r49 = ctx_r86.index;
    const ctx_r54 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r54.config.checkboxes || ctx_r54.config.radio);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("colspan", ctx_r54.columns.length + 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r54.detailsTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(4, _c6, row_r48, rowIndex_r49));
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "tr");
    ɵngcc0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_2_Template, 4, 2, "td", 3);
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_3_Template, 3, 1, "td", 3);
    ɵngcc0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_ng_container_4_Template, 5, 11, "ng-container", 11);
    ɵngcc0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_td_5_Template, 2, 1, "td", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(6, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_tr_6_Template, 4, 7, "tr", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const rowIndex_r49 = ctx.index;
    const ctx_r47 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("ngx-table__table-row--selected", rowIndex_r49 === ctx_r47.selectedRow && !ctx_r47.config.selectCell);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r47.config.checkboxes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r47.config.radio);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r47.columns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r47.config.additionalActions || ctx_r47.config.detailsTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r47.config.detailsTemplate && ctx_r47.selectedDetailsTemplateRowId.has(rowIndex_r49) || ctx_r47.config.collapseAllRows);
} }
function BaseComponent_tbody_3_ng_container_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_ng_container_2_ng_container_1_Template, 7, 7, "ng-container", 11);
    ɵngcc0.ɵɵpipe(2, "paginate");
    ɵngcc0.ɵɵpipe(3, "global");
    ɵngcc0.ɵɵpipe(4, "search");
    ɵngcc0.ɵɵpipe(5, "sort");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r45 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(2, 1, ɵngcc0.ɵɵpipeBind3(3, 4, ɵngcc0.ɵɵpipeBind3(4, 8, ɵngcc0.ɵɵpipeBind2(5, 12, ctx_r45.data, ctx_r45.sortBy), ctx_r45.term, ctx_r45.filteredCountSubject), ctx_r45.globalSearchTerm, ctx_r45.filteredCountSubject), ɵngcc0.ɵɵpureFunction4(15, _c7, ctx_r45.limit, ctx_r45.page, ctx_r45.count, ctx_r45.id)));
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_2_Template(rf, ctx) { if (rf & 1) {
    const _r96 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "label", 18);
    ɵngcc0.ɵɵelementStart(2, "input", 19);
    ɵngcc0.ɵɵlistener("change", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_2_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r96); const ctx_r97 = ɵngcc0.ɵɵnextContext(); const row_r88 = ctx_r97.$implicit; const rowIndex_r89 = ctx_r97.index; const ctx_r95 = ɵngcc0.ɵɵnextContext(4); return ctx_r95.onCheckboxSelect($event, row_r88, rowIndex_r89); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "em", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r89 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r90 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "checkbox-infinite-scroll-", rowIndex_r89, "");
    ɵngcc0.ɵɵproperty("checked", ctx_r90.isSelected || ctx_r90.selectedCheckboxes.has(rowIndex_r89));
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_3_Template(rf, ctx) { if (rf & 1) {
    const _r100 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "label");
    ɵngcc0.ɵɵelementStart(2, "input", 21);
    ɵngcc0.ɵɵlistener("change", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_3_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r100); const ctx_r101 = ɵngcc0.ɵɵnextContext(); const row_r88 = ctx_r101.$implicit; const rowIndex_r89 = ctx_r101.index; const ctx_r99 = ɵngcc0.ɵɵnextContext(4); return ctx_r99.onRadioSelect($event, row_r88, rowIndex_r89); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r89 = ɵngcc0.ɵɵnextContext().index;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "radio-infinite-scroll-", rowIndex_r89, "");
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "render");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r103 = ɵngcc0.ɵɵnextContext().$implicit;
    const row_r88 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(2, 1, row_r88, column_r103.key));
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 10);
} if (rf & 2) {
    const column_r103 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r111 = ɵngcc0.ɵɵnextContext();
    const row_r88 = ctx_r111.$implicit;
    const rowIndex_r89 = ctx_r111.index;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", column_r103.cellTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c8, row_r88, rowIndex_r89, column_r103));
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r113 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "td", 22, 13);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template_td_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r113); const column_r103 = ctx.$implicit; const colIndex_r104 = ctx.index; const ctx_r114 = ɵngcc0.ɵɵnextContext(); const row_r88 = ctx_r114.$implicit; const rowIndex_r89 = ctx_r114.index; const ctx_r112 = ɵngcc0.ɵɵnextContext(4); return ctx_r112.onClick($event, row_r88, column_r103.key, colIndex_r104, rowIndex_r89); })("contextmenu", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template_td_contextmenu_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r113); const column_r103 = ctx.$implicit; const colIndex_r104 = ctx.index; const ctx_r116 = ɵngcc0.ɵɵnextContext(); const row_r88 = ctx_r116.$implicit; const rowIndex_r89 = ctx_r116.index; const ctx_r115 = ɵngcc0.ɵɵnextContext(4); return ctx_r115.onRowContextMenu($event, row_r88, column_r103.key, colIndex_r104, rowIndex_r89); })("dblclick", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template_td_dblclick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r113); const column_r103 = ctx.$implicit; const colIndex_r104 = ctx.index; const ctx_r118 = ɵngcc0.ɵɵnextContext(); const row_r88 = ctx_r118.$implicit; const rowIndex_r89 = ctx_r118.index; const ctx_r117 = ɵngcc0.ɵɵnextContext(4); return ctx_r117.onDoubleClick($event, row_r88, column_r103.key, colIndex_r104, rowIndex_r89); });
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_div_3_Template, 3, 4, "div", 3);
    ɵngcc0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_ng_container_4_Template, 1, 6, "ng-container", 23);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r103 = ctx.$implicit;
    const colIndex_r104 = ctx.index;
    const rowIndex_r89 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r92 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("left", ctx_r92.styleService.pinnedWidth(column_r103.pinned, colIndex_r104));
    ɵngcc0.ɵɵclassProp("pinned-left", column_r103.pinned)("ngx-table__table-col--selected", colIndex_r104 === ctx_r92.selectedCol && !ctx_r92.config.selectCell)("ngx-table__table-cell--selected", colIndex_r104 === ctx_r92.selectedCol && rowIndex_r89 === ctx_r92.selectedRow && !ctx_r92.config.selectCol && !ctx_r92.config.selectRow);
    ɵngcc0.ɵɵproperty("ngClass", column_r103.cssClass ? column_r103.cssClass.name : "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !column_r103.cellTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r103.cellTemplate);
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_span_1_Template(rf, ctx) { if (rf & 1) {
    const _r123 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_span_1_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r123); const rowIndex_r89 = ɵngcc0.ɵɵnextContext(2).index; const ctx_r121 = ɵngcc0.ɵɵnextContext(4); return ctx_r121.collapseRow(rowIndex_r89); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r89 = ɵngcc0.ɵɵnextContext(2).index;
    const ctx_r120 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r120.isRowCollapsed(rowIndex_r89) ? "ngx-icon-arrow-down" : "ngx-icon-arrow-right");
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_span_1_Template, 1, 1, "span", 14);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r93 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r93.arrowDefinition);
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_tr_6_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "td");
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_tr_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_tr_6_td_1_Template, 1, 0, "td", 3);
    ɵngcc0.ɵɵelementStart(2, "td");
    ɵngcc0.ɵɵelementContainer(3, 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r126 = ɵngcc0.ɵɵnextContext();
    const row_r88 = ctx_r126.$implicit;
    const rowIndex_r89 = ctx_r126.index;
    const ctx_r94 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r94.config.checkboxes || ctx_r94.config.radio);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("colspan", ctx_r94.columns.length + 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r94.detailsTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction2(4, _c6, row_r88, rowIndex_r89));
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "tr");
    ɵngcc0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_2_Template, 4, 2, "td", 3);
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_3_Template, 3, 1, "td", 3);
    ɵngcc0.ɵɵtemplate(4, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_ng_container_4_Template, 5, 11, "ng-container", 11);
    ɵngcc0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_td_5_Template, 2, 1, "td", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(6, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_tr_6_Template, 4, 7, "tr", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const rowIndex_r89 = ctx.index;
    const ctx_r87 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("ngx-table__table-row--selected", rowIndex_r89 === ctx_r87.selectedRow && !ctx_r87.config.selectCell);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r87.config.checkboxes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r87.config.radio);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r87.columns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r87.config.additionalActions || ctx_r87.config.detailsTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r87.config.detailsTemplate && ctx_r87.selectedDetailsTemplateRowId.has(rowIndex_r89) || ctx_r87.config.collapseAllRows);
} }
function BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "cdk-virtual-scroll-viewport", 16);
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_ng_container_1_Template, 7, 7, "ng-container", 17);
    ɵngcc0.ɵɵpipe(2, "global");
    ɵngcc0.ɵɵpipe(3, "search");
    ɵngcc0.ɵɵpipe(4, "sort");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r46 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkVirtualForOf", ɵngcc0.ɵɵpipeBind3(2, 1, ɵngcc0.ɵɵpipeBind3(3, 5, ɵngcc0.ɵɵpipeBind2(4, 9, ctx_r46.data, ctx_r46.sortBy), ctx_r46.term, ctx_r46.filteredCountSubject), ctx_r46.globalSearchTerm, ctx_r46.filteredCountSubject));
} }
function BaseComponent_tbody_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_2_ul_1_Template, 2, 8, "ul", 7);
    ɵngcc0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_2_ng_container_2_Template, 6, 20, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_2_cdk_virtual_scroll_viewport_3_Template, 5, 12, "cdk-virtual-scroll-viewport", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.rowContextMenuPosition.top);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r7.config.infiniteScroll);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.config.infiniteScroll);
} }
function BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "td");
    ɵngcc0.ɵɵelementStart(2, "div");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const group_r128 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r130 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵattribute("colspan", ctx_r130.columns.length);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate2("", group_r128[0][ctx_r130.groupRowsBy], " (", group_r128.length, ")");
} }
const _c9 = function (a0, a1, a2, a3, a4) { return { total: a0, key: a1, value: a2, group: a3, index: a4 }; };
function BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 10);
} if (rf & 2) {
    const ctx_r135 = ɵngcc0.ɵɵnextContext();
    const group_r128 = ctx_r135.$implicit;
    const rowIndex_r129 = ctx_r135.index;
    const ctx_r131 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r131.groupRowsHeaderTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction5(2, _c9, group_r128.length, ctx_r131.groupRowsBy, group_r128[0] ? group_r128[0][ctx_r131.groupRowsBy] : "", group_r128, rowIndex_r129));
} }
function BaseComponent_tbody_3_ng_container_3_ng_container_1_span_5_Template(rf, ctx) { if (rf & 1) {
    const _r138 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 15);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_3_ng_container_3_ng_container_1_span_5_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r138); const rowIndex_r129 = ɵngcc0.ɵɵnextContext().index; const ctx_r136 = ɵngcc0.ɵɵnextContext(3); return ctx_r136.collapseRow(rowIndex_r129); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r129 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r132 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r132.isRowCollapsed(rowIndex_r129) ? "ngx-icon-arrow-down" : "ngx-icon-arrow-right");
} }
function BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_tr_1_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "render");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r143 = ctx.$implicit;
    const row_r141 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, row_r141, column_r143.key), " ");
} }
function BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_tr_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_tr_1_td_1_Template, 3, 4, "td", 11);
    ɵngcc0.ɵɵelement(2, "td");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r140 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r140.columns);
} }
function BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_tr_1_Template, 3, 1, "tr", 11);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const group_r128 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", group_r128);
} }
function BaseComponent_tbody_3_ng_container_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "tr");
    ɵngcc0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_2_Template, 4, 3, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_3_Template, 1, 8, "ng-container", 23);
    ɵngcc0.ɵɵelementStart(4, "td");
    ɵngcc0.ɵɵtemplate(5, BaseComponent_tbody_3_ng_container_3_ng_container_1_span_5_Template, 1, 1, "span", 14);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(6, BaseComponent_tbody_3_ng_container_3_ng_container_1_ng_container_6_Template, 2, 1, "ng-container", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const rowIndex_r129 = ctx.index;
    const ctx_r127 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r127.groupRowsHeaderTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r127.groupRowsHeaderTemplate);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r127.arrowDefinition);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r127.selectedDetailsTemplateRowId.has(rowIndex_r129));
} }
function BaseComponent_tbody_3_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_3_ng_container_1_Template, 7, 4, "ng-container", 11);
    ɵngcc0.ɵɵpipe(2, "paginate");
    ɵngcc0.ɵɵpipe(3, "global");
    ɵngcc0.ɵɵpipe(4, "search");
    ɵngcc0.ɵɵpipe(5, "sort");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(2, 1, ɵngcc0.ɵɵpipeBind3(3, 4, ɵngcc0.ɵɵpipeBind4(4, 8, ɵngcc0.ɵɵpipeBind3(5, 13, ctx_r8.grouped, ctx_r8.sortBy, ctx_r8.config), ctx_r8.term, ctx_r8.filteredCountSubject, ctx_r8.config), ctx_r8.globalSearchTerm, ctx_r8.filteredCountSubject), ɵngcc0.ɵɵpureFunction4(17, _c7, ctx_r8.limit, ctx_r8.page, ctx_r8.count, ctx_r8.id)));
} }
function BaseComponent_tbody_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tbody");
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_3_ng_container_1_Template, 4, 3, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(2, BaseComponent_tbody_3_ng_container_2_Template, 4, 3, "ng-container", 3);
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_3_ng_container_3_Template, 6, 22, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.rowTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.rowTemplate && !ctx_r0.config.groupRows);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.rowTemplate && ctx_r0.config.groupRows);
} }
function BaseComponent_tbody_4_ng_container_1_ng_container_1_td_2_Template(rf, ctx) { if (rf & 1) {
    const _r154 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "label", 18);
    ɵngcc0.ɵɵelementStart(2, "input", 19);
    ɵngcc0.ɵɵlistener("change", function BaseComponent_tbody_4_ng_container_1_ng_container_1_td_2_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r154); const ctx_r155 = ɵngcc0.ɵɵnextContext(); const row_r148 = ctx_r155.$implicit; const rowIndex_r149 = ctx_r155.index; const ctx_r153 = ɵngcc0.ɵɵnextContext(3); return ctx_r153.onCheckboxSelect($event, row_r148, rowIndex_r149); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "em", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r149 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r150 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "checkbox-draggable-", rowIndex_r149, "");
    ɵngcc0.ɵɵproperty("checked", ctx_r150.isSelected || ctx_r150.selectedCheckboxes.has(rowIndex_r149));
} }
function BaseComponent_tbody_4_ng_container_1_ng_container_1_td_3_Template(rf, ctx) { if (rf & 1) {
    const _r158 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "label");
    ɵngcc0.ɵɵelementStart(2, "input", 21);
    ɵngcc0.ɵɵlistener("change", function BaseComponent_tbody_4_ng_container_1_ng_container_1_td_3_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r158); const ctx_r159 = ɵngcc0.ɵɵnextContext(); const row_r148 = ctx_r159.$implicit; const rowIndex_r149 = ctx_r159.index; const ctx_r157 = ɵngcc0.ɵɵnextContext(3); return ctx_r157.onRadioSelect($event, row_r148, rowIndex_r149); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rowIndex_r149 = ɵngcc0.ɵɵnextContext().index;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("id", "radio-draggable-", rowIndex_r149, "");
} }
function BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r164 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "td", 26);
    ɵngcc0.ɵɵlistener("click", function BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_Template_td_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r164); const column_r161 = ctx.$implicit; const colIndex_r162 = ctx.index; const ctx_r165 = ɵngcc0.ɵɵnextContext(); const row_r148 = ctx_r165.$implicit; const rowIndex_r149 = ctx_r165.index; const ctx_r163 = ɵngcc0.ɵɵnextContext(3); return ctx_r163.onClick($event, row_r148, column_r161.key, colIndex_r162, rowIndex_r149); })("dblclick", function BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_Template_td_dblclick_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r164); const column_r161 = ctx.$implicit; const colIndex_r162 = ctx.index; const ctx_r167 = ɵngcc0.ɵɵnextContext(); const row_r148 = ctx_r167.$implicit; const rowIndex_r149 = ctx_r167.index; const ctx_r166 = ɵngcc0.ɵɵnextContext(3); return ctx_r166.onDoubleClick($event, row_r148, column_r161.key, colIndex_r162, rowIndex_r149); });
    ɵngcc0.ɵɵelementStart(2, "div");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "render");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r161 = ctx.$implicit;
    const colIndex_r162 = ctx.index;
    const ctx_r168 = ɵngcc0.ɵɵnextContext();
    const rowIndex_r149 = ctx_r168.index;
    const row_r148 = ctx_r168.$implicit;
    const ctx_r152 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("ngx-table__table-col--selected", colIndex_r162 === ctx_r152.selectedCol && !ctx_r152.config.selectCell)("ngx-table__table-cell--selected", colIndex_r162 === ctx_r152.selectedCol && rowIndex_r149 === ctx_r152.selectedRow && !ctx_r152.config.selectCol && !ctx_r152.config.selectRow);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind2(4, 5, row_r148, column_r161.key));
} }
function BaseComponent_tbody_4_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "tr", 25);
    ɵngcc0.ɵɵtemplate(2, BaseComponent_tbody_4_ng_container_1_ng_container_1_td_2_Template, 4, 2, "td", 3);
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_4_ng_container_1_ng_container_1_td_3_Template, 3, 1, "td", 3);
    ɵngcc0.ɵɵtemplate(4, BaseComponent_tbody_4_ng_container_1_ng_container_1_ng_container_4_Template, 5, 8, "ng-container", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r147 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r147.config.checkboxes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r147.config.radio);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r147.columns);
} }
function BaseComponent_tbody_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_4_ng_container_1_ng_container_1_Template, 5, 3, "ng-container", 11);
    ɵngcc0.ɵɵpipe(2, "paginate");
    ɵngcc0.ɵɵpipe(3, "global");
    ɵngcc0.ɵɵpipe(4, "search");
    ɵngcc0.ɵɵpipe(5, "sort");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r146 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind2(2, 1, ɵngcc0.ɵɵpipeBind3(3, 4, ɵngcc0.ɵɵpipeBind3(4, 8, ɵngcc0.ɵɵpipeBind2(5, 12, ctx_r146.data, ctx_r146.sortBy), ctx_r146.term, ctx_r146.filteredCountSubject), ctx_r146.globalSearchTerm, ctx_r146.filteredCountSubject), ɵngcc0.ɵɵpureFunction4(15, _c7, ctx_r146.limit, ctx_r146.page, ctx_r146.count, ctx_r146.id)));
} }
function BaseComponent_tbody_4_Template(rf, ctx) { if (rf & 1) {
    const _r170 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tbody", 24);
    ɵngcc0.ɵɵlistener("cdkDropListDropped", function BaseComponent_tbody_4_Template_tbody_cdkDropListDropped_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r170); const ctx_r169 = ɵngcc0.ɵɵnextContext(); return ctx_r169.onDrop($event); });
    ɵngcc0.ɵɵtemplate(1, BaseComponent_tbody_4_ng_container_1_Template, 6, 20, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.rowTemplate && !ctx_r1.config.groupRows);
} }
function BaseComponent_tbody_5_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 29);
} if (rf & 2) {
    const ctx_r171 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r171.noResultsTemplate);
} }
function BaseComponent_tbody_5_td_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "div", 30);
    ɵngcc0.ɵɵtext(2, " No results ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r172 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵattribute("colspan", ctx_r172.columns && ctx_r172.columns.length + 1);
} }
function BaseComponent_tbody_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tbody");
    ɵngcc0.ɵɵelementStart(1, "tr", 27);
    ɵngcc0.ɵɵtemplate(2, BaseComponent_tbody_5_ng_container_2_Template, 1, 1, "ng-container", 28);
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_5_td_3_Template, 3, 1, "td", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.noResultsTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.noResultsTemplate);
} }
function BaseComponent_tbody_6_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 29);
} if (rf & 2) {
    const ctx_r173 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r173.loadingTemplate);
} }
function BaseComponent_tbody_6_td_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td");
    ɵngcc0.ɵɵelementStart(1, "div", 32);
    ɵngcc0.ɵɵelement(2, "div", 33);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r174 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵattribute("colspan", ctx_r174.columns && ctx_r174.columns.length + 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("height", ctx_r174.loadingHeight, "px");
} }
function BaseComponent_tbody_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tbody");
    ɵngcc0.ɵɵelementStart(1, "tr", 31);
    ɵngcc0.ɵɵtemplate(2, BaseComponent_tbody_6_ng_container_2_Template, 1, 1, "ng-container", 28);
    ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_6_td_3_Template, 3, 3, "td", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.loadingTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.loadingTemplate);
} }
const _c10 = function (a0, a1, a2) { return { total: a0, limit: a1, page: a2 }; };
function BaseComponent_tfoot_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tfoot");
    ɵngcc0.ɵɵelementStart(1, "tr");
    ɵngcc0.ɵɵelementContainer(2, 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r4.summaryTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c10, ctx_r4.data.length, ctx_r4.limit, ctx_r4.page));
} }
const _c11 = ["th"];
const _c12 = ["additionalActionMenu"];
const _c13 = ["table-thead", ""];
function TableTHeadComponent_tr_0_th_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 10);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r7.selectAllTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c5, ctx_r7.onSelectAllBinded));
} }
function TableTHeadComponent_tr_0_th_1_label_2_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "label", 11);
    ɵngcc0.ɵɵelementStart(1, "input", 12);
    ɵngcc0.ɵɵlistener("change", function TableTHeadComponent_tr_0_th_1_label_2_Template_input_change_1_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(3); return ctx_r9.onSelectAll(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(2, "em", 13);
    ɵngcc0.ɵɵelementEnd();
} }
function TableTHeadComponent_tr_0_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th");
    ɵngcc0.ɵɵtemplate(1, TableTHeadComponent_tr_0_th_1_ng_container_1_Template, 1, 4, "ng-container", 8);
    ɵngcc0.ɵɵtemplate(2, TableTHeadComponent_tr_0_th_1_label_2_Template, 3, 0, "label", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("width", "3%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.selectAllTemplate && ctx_r4.config.checkboxes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r4.selectAllTemplate && ctx_r4.config.checkboxes);
} }
function TableTHeadComponent_tr_0_ng_container_2_em_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "em", 23);
} }
function TableTHeadComponent_tr_0_ng_container_2_em_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "em", 24);
} }
function TableTHeadComponent_tr_0_ng_container_2_em_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "em", 25);
} }
function TableTHeadComponent_tr_0_ng_container_2_div_12_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 30);
    ɵngcc0.ɵɵelementContainer(1, 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r11 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", column_r11.headerActionTemplate);
} }
function TableTHeadComponent_tr_0_ng_container_2_div_12_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelementStart(1, "a", 27);
    ɵngcc0.ɵɵlistener("click", function TableTHeadComponent_tr_0_ng_container_2_div_12_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r24); const column_r11 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.showHeaderActionTemplateMenu(column_r11); });
    ɵngcc0.ɵɵelement(2, "span", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, TableTHeadComponent_tr_0_ng_container_2_div_12_div_3_Template, 2, 1, "div", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r11 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", column_r11.key === ctx_r18.openedHeaderActionTemplate);
} }
function TableTHeadComponent_tr_0_ng_container_2_div_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 32);
} }
function TableTHeadComponent_tr_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r27 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "th", 14, 15);
    ɵngcc0.ɵɵlistener("mousedown", function TableTHeadComponent_tr_0_ng_container_2_Template_th_mousedown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const _r14 = ɵngcc0.ɵɵreference(2); const ctx_r26 = ɵngcc0.ɵɵnextContext(2); return ctx_r26.onMouseDown($event, _r14); })("mouseup", function TableTHeadComponent_tr_0_ng_container_2_Template_th_mouseup_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r28 = ɵngcc0.ɵɵnextContext(2); return ctx_r28.onMouseUp($event); })("mousemove", function TableTHeadComponent_tr_0_ng_container_2_Template_th_mousemove_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r27); const ctx_r29 = ɵngcc0.ɵɵnextContext(2); return ctx_r29.onMouseMove($event); });
    ɵngcc0.ɵɵelementStart(3, "div", 16);
    ɵngcc0.ɵɵlistener("click", function TableTHeadComponent_tr_0_ng_container_2_Template_div_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r27); const column_r11 = ctx.$implicit; const ctx_r30 = ɵngcc0.ɵɵnextContext(2); return ctx_r30.orderBy(column_r11); });
    ɵngcc0.ɵɵelementStart(4, "div", 17);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementStart(6, "span");
    ɵngcc0.ɵɵtext(7, "\u00A0");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, TableTHeadComponent_tr_0_ng_container_2_em_8_Template, 1, 0, "em", 18);
    ɵngcc0.ɵɵelementStart(9, "div");
    ɵngcc0.ɵɵtemplate(10, TableTHeadComponent_tr_0_ng_container_2_em_10_Template, 1, 0, "em", 19);
    ɵngcc0.ɵɵtemplate(11, TableTHeadComponent_tr_0_ng_container_2_em_11_Template, 1, 0, "em", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(12, TableTHeadComponent_tr_0_ng_container_2_div_12_Template, 4, 1, "div", 21);
    ɵngcc0.ɵɵtemplate(13, TableTHeadComponent_tr_0_ng_container_2_div_13_Template, 1, 0, "div", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r11 = ctx.$implicit;
    const colIndex_r12 = ctx.index;
    const last_r13 = ctx.last;
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("left", ctx_r5.styleService.pinnedWidth(column_r11.pinned, colIndex_r12))("width", ctx_r5.getColumnWidth(column_r11));
    ɵngcc0.ɵɵclassProp("pinned-left", column_r11.pinned);
    ɵngcc0.ɵɵproperty("ngClass", column_r11.cssClass && column_r11.cssClass.includeHeader ? column_r11.cssClass.name : "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("pointer", ctx_r5.isOrderEnabled(column_r11));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(column_r11.title);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", column_r11.pinned);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("display", ctx_r5.config.orderEnabled ? "inline" : "none");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.sortKey === column_r11.key && ctx_r5.sortState.get(ctx_r5.sortKey) === "asc");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.sortKey === column_r11.key && ctx_r5.sortState.get(ctx_r5.sortKey) === "desc");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !!column_r11.headerActionTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.config.resizeColumn && !last_r13);
} }
function TableTHeadComponent_tr_0_th_3_div_1_ul_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 31);
} if (rf & 2) {
    const ctx_r34 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r34.additionalActionsTemplate);
} }
function TableTHeadComponent_tr_0_th_3_div_1_ul_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 30);
    ɵngcc0.ɵɵtemplate(1, TableTHeadComponent_tr_0_th_3_div_1_ul_4_ng_container_1_Template, 1, 1, "ng-container", 36);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r33 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r33.additionalActionsTemplate);
} }
function TableTHeadComponent_tr_0_th_3_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r36 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 26, 34);
    ɵngcc0.ɵɵelementStart(2, "a", 27);
    ɵngcc0.ɵɵlistener("click", function TableTHeadComponent_tr_0_th_3_div_1_Template_a_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r36); const ctx_r35 = ɵngcc0.ɵɵnextContext(3); return ctx_r35.showMenu(); });
    ɵngcc0.ɵɵelement(3, "span", 35);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, TableTHeadComponent_tr_0_th_3_div_1_ul_4_Template, 2, 1, "ul", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r31 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r31.menuActive);
} }
function TableTHeadComponent_tr_0_th_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 33);
    ɵngcc0.ɵɵtemplate(1, TableTHeadComponent_tr_0_th_3_div_1_Template, 5, 1, "div", 21);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r6.config.additionalActions);
} }
function TableTHeadComponent_tr_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 4);
    ɵngcc0.ɵɵtemplate(1, TableTHeadComponent_tr_0_th_1_Template, 3, 4, "th", 5);
    ɵngcc0.ɵɵtemplate(2, TableTHeadComponent_tr_0_ng_container_2_Template, 14, 17, "ng-container", 6);
    ɵngcc0.ɵɵtemplate(3, TableTHeadComponent_tr_0_th_3_Template, 2, 1, "th", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.config.checkboxes || ctx_r0.config.radio);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.columns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.config.additionalActions || ctx_r0.config.detailsTemplate || ctx_r0.config.collapseAllRows || ctx_r0.config.groupRows);
} }
function TableTHeadComponent_tr_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 10);
} if (rf & 2) {
    const ctx_r37 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r37.selectAllTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c5, ctx_r37.onSelectAllBinded));
} }
function TableTHeadComponent_tr_1_label_3_Template(rf, ctx) { if (rf & 1) {
    const _r42 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "label", 11);
    ɵngcc0.ɵɵelementStart(1, "input", 38);
    ɵngcc0.ɵɵlistener("change", function TableTHeadComponent_tr_1_label_3_Template_input_change_1_listener() { ɵngcc0.ɵɵrestoreView(_r42); const ctx_r41 = ɵngcc0.ɵɵnextContext(2); return ctx_r41.onSelectAll(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(2, "em", 39);
    ɵngcc0.ɵɵelementEnd();
} }
function TableTHeadComponent_tr_1_ng_container_4_em_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "em", 23);
} }
function TableTHeadComponent_tr_1_ng_container_4_em_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "em", 24);
} }
function TableTHeadComponent_tr_1_ng_container_4_em_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "em", 25);
} }
function TableTHeadComponent_tr_1_ng_container_4_div_12_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 30);
    ɵngcc0.ɵɵelementContainer(1, 31);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r43 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", column_r43.headerActionTemplate);
} }
function TableTHeadComponent_tr_1_ng_container_4_div_12_Template(rf, ctx) { if (rf & 1) {
    const _r56 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 26);
    ɵngcc0.ɵɵelementStart(1, "a", 27);
    ɵngcc0.ɵɵlistener("click", function TableTHeadComponent_tr_1_ng_container_4_div_12_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r56); const column_r43 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r54 = ɵngcc0.ɵɵnextContext(2); return ctx_r54.showHeaderActionTemplateMenu(column_r43); });
    ɵngcc0.ɵɵelement(2, "span", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, TableTHeadComponent_tr_1_ng_container_4_div_12_div_3_Template, 2, 1, "div", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r43 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r50 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", column_r43.key === ctx_r50.openedHeaderActionTemplate);
} }
function TableTHeadComponent_tr_1_ng_container_4_div_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 32);
} }
function TableTHeadComponent_tr_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    const _r59 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "th", 40, 15);
    ɵngcc0.ɵɵlistener("mousedown", function TableTHeadComponent_tr_1_ng_container_4_Template_th_mousedown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const _r46 = ɵngcc0.ɵɵreference(2); const ctx_r58 = ɵngcc0.ɵɵnextContext(2); return ctx_r58.onMouseDown($event, _r46); })("mouseup", function TableTHeadComponent_tr_1_ng_container_4_Template_th_mouseup_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r60 = ɵngcc0.ɵɵnextContext(2); return ctx_r60.onMouseUp($event); })("mousemove", function TableTHeadComponent_tr_1_ng_container_4_Template_th_mousemove_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r59); const ctx_r61 = ɵngcc0.ɵɵnextContext(2); return ctx_r61.onMouseMove($event); });
    ɵngcc0.ɵɵelementStart(3, "div", 41);
    ɵngcc0.ɵɵlistener("click", function TableTHeadComponent_tr_1_ng_container_4_Template_div_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r59); const column_r43 = ctx.$implicit; const ctx_r62 = ɵngcc0.ɵɵnextContext(2); return ctx_r62.orderBy(column_r43); });
    ɵngcc0.ɵɵelementStart(4, "div", 17);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementStart(6, "span");
    ɵngcc0.ɵɵtext(7, "\u00A0");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, TableTHeadComponent_tr_1_ng_container_4_em_8_Template, 1, 0, "em", 18);
    ɵngcc0.ɵɵelementStart(9, "div");
    ɵngcc0.ɵɵtemplate(10, TableTHeadComponent_tr_1_ng_container_4_em_10_Template, 1, 0, "em", 19);
    ɵngcc0.ɵɵtemplate(11, TableTHeadComponent_tr_1_ng_container_4_em_11_Template, 1, 0, "em", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(12, TableTHeadComponent_tr_1_ng_container_4_div_12_Template, 4, 1, "div", 21);
    ɵngcc0.ɵɵtemplate(13, TableTHeadComponent_tr_1_ng_container_4_div_13_Template, 1, 0, "div", 22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r43 = ctx.$implicit;
    const colIndex_r44 = ctx.index;
    const last_r45 = ctx.last;
    const ctx_r39 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("left", ctx_r39.styleService.pinnedWidth(column_r43.pinned, colIndex_r44))("width", ctx_r39.getColumnWidth(column_r43));
    ɵngcc0.ɵɵclassProp("pinned-left", column_r43.pinned);
    ɵngcc0.ɵɵproperty("ngClass", column_r43.cssClass && column_r43.cssClass.includeHeader ? column_r43.cssClass.name : "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("pointer", ctx_r39.isOrderEnabled(column_r43));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(column_r43.title);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", column_r43.pinned);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("display", ctx_r39.config.orderEnabled ? "inline" : "none");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r39.sortKey === column_r43.key && ctx_r39.sortState.get(ctx_r39.sortKey) === "asc");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r39.sortKey === column_r43.key && ctx_r39.sortState.get(ctx_r39.sortKey) === "desc");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !!column_r43.headerActionTemplate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r39.config.resizeColumn && !last_r45);
} }
function TableTHeadComponent_tr_1_th_5_div_1_ul_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 31);
} if (rf & 2) {
    const ctx_r66 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r66.additionalActionsTemplate);
} }
function TableTHeadComponent_tr_1_th_5_div_1_ul_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 30);
    ɵngcc0.ɵɵtemplate(1, TableTHeadComponent_tr_1_th_5_div_1_ul_4_ng_container_1_Template, 1, 1, "ng-container", 36);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r65 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r65.additionalActionsTemplate);
} }
function TableTHeadComponent_tr_1_th_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r68 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 26, 34);
    ɵngcc0.ɵɵelementStart(2, "a", 27);
    ɵngcc0.ɵɵlistener("click", function TableTHeadComponent_tr_1_th_5_div_1_Template_a_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r68); const ctx_r67 = ɵngcc0.ɵɵnextContext(3); return ctx_r67.showMenu(); });
    ɵngcc0.ɵɵelement(3, "span", 35);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, TableTHeadComponent_tr_1_th_5_div_1_ul_4_Template, 2, 1, "ul", 29);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r63 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r63.menuActive);
} }
function TableTHeadComponent_tr_1_th_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 33);
    ɵngcc0.ɵɵtemplate(1, TableTHeadComponent_tr_1_th_5_div_1_Template, 5, 1, "div", 21);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r40 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r40.config.additionalActions);
} }
function TableTHeadComponent_tr_1_Template(rf, ctx) { if (rf & 1) {
    const _r70 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 37);
    ɵngcc0.ɵɵlistener("cdkDropListDropped", function TableTHeadComponent_tr_1_Template_tr_cdkDropListDropped_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r70); const ctx_r69 = ɵngcc0.ɵɵnextContext(); return ctx_r69.columnDrop($event); });
    ɵngcc0.ɵɵelementStart(1, "th");
    ɵngcc0.ɵɵtemplate(2, TableTHeadComponent_tr_1_ng_container_2_Template, 1, 4, "ng-container", 8);
    ɵngcc0.ɵɵtemplate(3, TableTHeadComponent_tr_1_label_3_Template, 3, 0, "label", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, TableTHeadComponent_tr_1_ng_container_4_Template, 14, 17, "ng-container", 6);
    ɵngcc0.ɵɵtemplate(5, TableTHeadComponent_tr_1_th_5_Template, 2, 1, "th", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", "3%");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.selectAllTemplate && ctx_r1.config.checkboxes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.selectAllTemplate && ctx_r1.config.checkboxes);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r1.columns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.config.additionalActions || ctx_r1.config.detailsTemplate || ctx_r1.config.collapseAllRows || ctx_r1.config.groupRows);
} }
function TableTHeadComponent_tr_2_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "th");
} }
function TableTHeadComponent_tr_2_ng_container_2_table_header_2_Template(rf, ctx) { if (rf & 1) {
    const _r78 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "table-header", 45);
    ɵngcc0.ɵɵlistener("update", function TableTHeadComponent_tr_2_ng_container_2_table_header_2_Template_table_header_update_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r78); const ctx_r77 = ɵngcc0.ɵɵnextContext(3); return ctx_r77.onSearch($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r74 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵproperty("column", column_r74);
} }
function TableTHeadComponent_tr_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "th", 43);
    ɵngcc0.ɵɵtemplate(2, TableTHeadComponent_tr_2_ng_container_2_table_header_2_Template, 1, 1, "table-header", 44);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r74 = ctx.$implicit;
    const colIndex_r75 = ctx.index;
    const ctx_r72 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("left", ctx_r72.styleService.pinnedWidth(column_r74.pinned, colIndex_r75));
    ɵngcc0.ɵɵclassProp("pinned-left", column_r74.pinned);
    ɵngcc0.ɵɵproperty("ngClass", column_r74.cssClass && column_r74.cssClass.includeHeader ? column_r74.cssClass.name : "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r72.getColumnDefinition(column_r74));
} }
function TableTHeadComponent_tr_2_th_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "th");
} }
function TableTHeadComponent_tr_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 42);
    ɵngcc0.ɵɵtemplate(1, TableTHeadComponent_tr_2_th_1_Template, 1, 0, "th", 3);
    ɵngcc0.ɵɵtemplate(2, TableTHeadComponent_tr_2_ng_container_2_Template, 3, 6, "ng-container", 6);
    ɵngcc0.ɵɵtemplate(3, TableTHeadComponent_tr_2_th_3_Template, 1, 0, "th", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.config.checkboxes || ctx_r2.config.radio);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.columns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.config.additionalActions || ctx_r2.config.detailsTemplate);
} }
function TableTHeadComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "tr");
    ɵngcc0.ɵɵelementContainer(2, 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r3.filtersTemplate);
} }
var STYLE;
(function (STYLE) {
    STYLE["TINY"] = "tiny";
    STYLE["BIG"] = "big";
    STYLE["NORMAL"] = "normal";
})(STYLE || (STYLE = {}));
var THEME;
(function (THEME) {
    THEME["LIGHT"] = "light";
    THEME["DARK"] = "dark";
})(THEME || (THEME = {}));

var Event;
(function (Event) {
    Event["onPagination"] = "onPagination";
    Event["onOrder"] = "onOrder";
    Event["onGlobalSearch"] = "onGlobalSearch";
    Event["onSearch"] = "onSearch";
    Event["onClick"] = "onClick";
    Event["onDoubleClick"] = "onDoubleClick";
    Event["onCheckboxSelect"] = "onCheckboxSelect";
    Event["onRadioSelect"] = "onRadioSelect";
    Event["onCheckboxToggle"] = "onCheckboxToggle";
    Event["onSelectAll"] = "onSelectAll";
    Event["onInfiniteScrollEnd"] = "onInfiniteScrollEnd";
    Event["onColumnResizeMouseDown"] = "onColumnResizeMouseDown";
    Event["onColumnResizeMouseUp"] = "onColumnResizeMouseUp";
    Event["onRowDrop"] = "onRowDrop";
    Event["onRowCollapsedShow"] = "onRowCollapsedShow";
    Event["onRowCollapsedHide"] = "onRowCollapsedHide";
    Event["onRowContextMenu"] = "onRowContextMenu";
})(Event || (Event = {}));

var API;
(function (API) {
    API["rowContextMenuClicked"] = "rowContextMenuClicked";
    API["setInputValue"] = "setInputValue";
    API["toolPanelClicked"] = "toolPanelClicked";
    API["toggleRowIndex"] = "toggleRowIndex";
    API["toggleCheckbox"] = "toggleCheckbox";
    API["onGlobalSearch"] = "onGlobalSearch";
    API["setPaginationCurrentPage"] = "setPaginationCurrentPage";
    API["getPaginationCurrentPage"] = "getPaginationCurrentPage";
    API["getPaginationTotalItems"] = "getPaginationTotalItems";
    API["getNumberOfRowsPerPage"] = "getNumberOfRowsPerPage";
    API["getPaginationLastPage"] = "getPaginationLastPage";
    API["setPaginationRange"] = "setPaginationRange";
    API["setPaginationPreviousLabel"] = "setPaginationPreviousLabel";
    API["setPaginationNextLabel"] = "setPaginationNextLabel";
    API["setPaginationDisplayLimit"] = "setPaginationDisplayLimit";
    API["setTableClass"] = "setTableClass";
    API["setRowClass"] = "setRowClass";
    API["setCellClass"] = "setCellClass";
    API["setRowStyle"] = "setRowStyle";
    API["setCellStyle"] = "setCellStyle";
    API["sortBy"] = "sortBy";
})(API || (API = {}));

const DefaultConfig = {
    searchEnabled: false,
    headerEnabled: true,
    orderEnabled: true,
    orderEventOnly: false,
    paginationEnabled: true,
    exportEnabled: false,
    clickEvent: true,
    selectRow: false,
    selectCol: false,
    selectCell: false,
    rows: 10,
    additionalActions: false,
    serverPagination: false,
    isLoading: false,
    detailsTemplate: false,
    groupRows: false,
    paginationRangeEnabled: true,
    collapseAllRows: false,
    checkboxes: false,
    radio: false,
    resizeColumn: false,
    fixedColumnWidth: true,
    horizontalScroll: false,
    draggable: false,
    logger: false,
    showDetailsArrow: false,
    showContextMenu: false,
    persistState: false,
    paginationMaxSize: 5,
    threeWaySort: false,
    tableLayout: {
        style: STYLE.NORMAL,
        theme: THEME.LIGHT,
        borderless: false,
        hover: true,
        striped: false,
    },
};
let DefaultConfigService = class DefaultConfigService {
};
DefaultConfigService.ɵfac = function DefaultConfigService_Factory(t) { return new (t || DefaultConfigService)(); };
DefaultConfigService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DefaultConfigService, factory: DefaultConfigService.ɵfac });
DefaultConfigService.config = DefaultConfig;

let PaginationComponent = class PaginationComponent {
    constructor() {
        this.updateRange = new EventEmitter();
        this.ranges = [5, 10, 25, 50, 100];
        this.showRange = false;
        this.screenReaderPaginationLabel = 'Pagination';
        this.screenReaderPageLabel = 'page';
        this.screenReaderCurrentLabel = 'You are on page';
        this.previousLabel = '';
        this.nextLabel = '';
        this.directionLinks = true;
    }
    onClick(targetElement) {
        if (this.paginationRange && !this.paginationRange.nativeElement.contains(targetElement)) {
            this.showRange = false;
        }
    }
    ngOnChanges(changes) {
        const { config } = changes;
        if (config && config.currentValue) {
            this.selectedLimit = this.config.rows;
        }
    }
    onPageChange(page) {
        this.updateRange.emit({
            page,
            limit: this.selectedLimit,
        });
    }
    changeLimit(limit, callFromAPI) {
        if (!callFromAPI) {
            this.showRange = !this.showRange;
        }
        this.selectedLimit = limit;
        this.updateRange.emit({
            page: 1,
            limit,
        });
    }
};
PaginationComponent.ɵfac = function PaginationComponent_Factory(t) { return new (t || PaginationComponent)(); };
PaginationComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: PaginationComponent, selectors: [["pagination"]], viewQuery: function PaginationComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
        ɵngcc0.ɵɵviewQuery(_c1, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.paginationDirective = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.paginationRange = _t.first);
    } }, hostBindings: function PaginationComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function PaginationComponent_click_HostBindingHandler($event) { return ctx.onClick($event.target); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { pagination: "pagination", config: "config", id: "id" }, outputs: { updateRange: "updateRange" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 11, vars: 17, consts: [[1, "ngx-pagination-wrapper"], [1, "ngx-pagination-steps"], ["id", "pagination-controls", 3, "id", "maxSize", "pageChange"], ["paginationDirective", "paginationApi"], ["role", "navigation", 1, "ngx-pagination"], ["class", "pagination-previous", 3, "disabled", 4, "ngIf"], [1, "small-screen"], [3, "current", "ellipsis", 4, "ngFor", "ngForOf"], ["class", "pagination-next", 3, "disabled", 4, "ngIf"], ["class", "ngx-pagination-range", 3, "ngx-table__table--dark-pagination-range", 4, "ngIf"], [1, "pagination-previous"], ["tabindex", "0", 3, "keyup.enter", "click", 4, "ngIf"], [4, "ngIf"], ["tabindex", "0", 3, "keyup.enter", "click"], [1, "show-for-sr"], [1, "pagination-next"], [1, "ngx-pagination-range"], ["paginationRange", ""], ["id", "rowAmount", 1, "ngx-dropdown", "ngx-pagination-range-dropdown"], [1, "ngx-btn-group"], [1, "ngx-pagination-range-dropdown-button", 3, "click"], [1, "ngx-icon", "ngx-icon-arrow-down"], ["class", "ngx-menu", 4, "ngIf"], [1, "ngx-menu"], ["class", "ngx-pagination-range-dropdown-button-item", 3, "ngx-pagination-range--selected", "click", 4, "ngFor", "ngForOf"], [1, "ngx-pagination-range-dropdown-button-item", 3, "click"]], template: function PaginationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "pagination-template", 2, 3);
        ɵngcc0.ɵɵlistener("pageChange", function PaginationComponent_Template_pagination_template_pageChange_2_listener($event) { return ctx.onPageChange($event); });
        ɵngcc0.ɵɵelementStart(4, "ul", 4);
        ɵngcc0.ɵɵtemplate(5, PaginationComponent_li_5_Template, 3, 4, "li", 5);
        ɵngcc0.ɵɵelementStart(6, "li", 6);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, PaginationComponent_li_8_Template, 3, 6, "li", 7);
        ɵngcc0.ɵɵtemplate(9, PaginationComponent_li_9_Template, 3, 4, "li", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(10, PaginationComponent_div_10_Template, 8, 4, "div", 9);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(3);
        ɵngcc0.ɵɵstyleProp("display", ctx.config.paginationEnabled ? "" : "none");
        ɵngcc0.ɵɵclassProp("ngx-table__table--dark-pagination-wrapper", ctx.config.tableLayout.theme === "dark");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassProp("ngx-table__table--dark-pagination", ctx.config.tableLayout.theme === "dark");
        ɵngcc0.ɵɵproperty("id", ctx.id)("maxSize", ctx.config.paginationMaxSize || 5);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassProp("responsive", true);
        ɵngcc0.ɵɵattribute("aria-label", ctx.screenReaderPaginationLabel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.directionLinks);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate2(" ", _r0.getCurrent(), " / ", _r0.getLastPage(), " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", _r0.pages);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.directionLinks);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.paginationRangeEnabled);
    } }, directives: [ɵngcc1.PaginationControlsDirective, ɵngcc2.NgIf, ɵngcc2.NgForOf], encapsulation: 2, changeDetection: 0 });
__decorate([
    ViewChild('paginationDirective', { static: true }),
    __metadata("design:type", PaginationControlsDirective)
], PaginationComponent.prototype, "paginationDirective", void 0);
__decorate([
    ViewChild('paginationRange'),
    __metadata("design:type", Object)
], PaginationComponent.prototype, "paginationRange", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], PaginationComponent.prototype, "pagination", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], PaginationComponent.prototype, "config", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], PaginationComponent.prototype, "id", void 0);
__decorate([
    Output(),
    __metadata("design:type", EventEmitter)
], PaginationComponent.prototype, "updateRange", void 0);
__decorate([
    HostListener('document:click', ['$event.target']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], PaginationComponent.prototype, "onClick", null);

let GroupRowsService = class GroupRowsService {
    static doGroupRows(data, groupRowsBy) {
        const grouped = [];
        from(data).pipe(groupBy((row) => row[groupRowsBy]), flatMap((group) => group.pipe(reduce((acc, curr) => [...acc, curr], [])))).subscribe((row) => grouped.push(row));
        return grouped;
    }
};
GroupRowsService.ɵfac = function GroupRowsService_Factory(t) { return new (t || GroupRowsService)(); };
GroupRowsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GroupRowsService, factory: GroupRowsService.ɵfac });

/* tslint:disable:no-useless-cast */
let StyleService = class StyleService {
    setRowClass(val) {
        const selector = `#table > tbody > tr:nth-child(${val.row})`;
        const row = document.querySelector(selector);
        if (row) {
            row.classList.add(val.className);
        }
    }
    setCellClass(val) {
        const selector = `#table > tbody > tr:nth-child(${val.row}) > td:nth-child(${val.cell})`;
        const cell = document.querySelector(selector);
        if (cell) {
            cell.classList.add(val.className);
        }
    }
    setRowStyle(val) {
        const selector = `#table > tbody > tr:nth-child(${val.row})`;
        const row = document.querySelector(selector);
        if (row) {
            // tslint:disable-next-line:no-string-literal
            row.style[val.attr] = val.value;
        }
    }
    setCellStyle(val) {
        const selector = `#table > tbody > tr:nth-child(${val.row}) > td:nth-child(${val.cell})`;
        const cell = document.querySelector(selector);
        if (cell) {
            // tslint:disable-next-line:no-string-literal
            cell.style[val.attr] = val.value;
        }
    }
    pinnedWidth(pinned, column) {
        if (pinned) {
            return 150 * column + 'px';
        }
    }
};
StyleService.ɵfac = function StyleService_Factory(t) { return new (t || StyleService)(); };
StyleService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: StyleService, factory: StyleService.ɵfac });

let BaseComponent = class BaseComponent {
    constructor(cdr, scrollDispatcher, styleService) {
        this.cdr = cdr;
        this.scrollDispatcher = scrollDispatcher;
        this.styleService = styleService;
        this.unsubscribe = new Subject();
        this.filterCount = -1;
        this.filteredCountSubject = new Subject();
        this.tableClass = null;
        this.grouped = [];
        this.isSelected = false;
        this.page = 1;
        this.count = 0;
        this.sortState = new Map();
        this.sortKey = null;
        this.rowContextMenuPosition = {
            top: null,
            left: null,
            value: null,
        };
        this.sortBy = {
            key: '',
            order: 'asc',
        };
        this.selectedDetailsTemplateRowId = new Set();
        this.selectedCheckboxes = new Set();
        this.id = 'table';
        this.event = new EventEmitter();
        this.filteredCountSubject
            .pipe(takeUntil(this.unsubscribe))
            .subscribe((count) => {
            setTimeout(() => {
                this.filterCount = count;
                this.cdr.detectChanges();
            });
        });
    }
    onContextMenuClick(targetElement) {
        if (this.contextMenu && !this.contextMenu.nativeElement.contains(targetElement)) {
            this.rowContextMenuPosition = {
                top: null,
                left: null,
                value: null,
            };
        }
    }
    ngOnInit() {
        if (!this.columns) {
            console.error('[columns] property required!');
        }
        if (this.configuration) {
            this.config = this.configuration;
        }
        else {
            this.config = DefaultConfigService.config;
        }
        this.limit = this.config.rows;
        if (this.groupRowsBy) {
            this.grouped = GroupRowsService.doGroupRows(this.data, this.groupRowsBy);
        }
        this.doDecodePersistedState();
    }
    ngOnDestroy() {
        this.unsubscribe.next();
        this.unsubscribe.complete();
    }
    ngAfterViewInit() {
        const throttleValue = this.config.infiniteScrollThrottleTime ?
            this.config.infiniteScrollThrottleTime :
            200;
        this.scrollDispatcher.scrolled()
            .pipe(takeUntil(this.unsubscribe), throttleTime(throttleValue), filter((event) => {
            return !!event && this.viewPort && this.viewPort.getRenderedRange().end === this.viewPort.getDataLength();
        }))
            .subscribe(() => {
            this.emitEvent(Event.onInfiniteScrollEnd, null);
        });
    }
    ngOnChanges(changes) {
        const { configuration, data, pagination, groupRowsBy } = changes;
        this.toggleRowIndex = changes.toggleRowIndex;
        if (configuration && configuration.currentValue) {
            this.config = configuration.currentValue;
        }
        if (data && data.currentValue) {
            this.doApplyData(data);
        }
        if (pagination && pagination.currentValue) {
            const { count, limit, offset } = pagination.currentValue;
            this.count = count;
            this.limit = limit;
            this.page = offset;
        }
        if (groupRowsBy && groupRowsBy.currentValue) {
            this.grouped = GroupRowsService.doGroupRows(this.data, this.groupRowsBy);
        }
        if (this.toggleRowIndex && this.toggleRowIndex.currentValue) {
            const row = this.toggleRowIndex.currentValue;
            this.collapseRow(row.index);
        }
    }
    orderBy(column) {
        if (typeof column.orderEnabled !== 'undefined' && !column.orderEnabled) {
            return;
        }
        this.sortKey = column.key;
        if (!this.config.orderEnabled || this.sortKey === '') {
            return;
        }
        this.setColumnOrder(this.sortKey);
        if (!this.config.orderEventOnly && !column.orderEventOnly) {
            this.sortBy.key = this.sortKey;
            this.sortBy.order = this.sortState.get(this.sortKey);
        }
        else {
            this.sortBy.key = '';
            this.sortBy.order = '';
        }
        if (!this.config.serverPagination) {
            this.data = [...this.data];
            this.sortBy = Object.assign({}, this.sortBy);
        }
        const value = {
            key: this.sortKey,
            order: this.sortState.get(this.sortKey),
        };
        this.emitEvent(Event.onOrder, value);
    }
    onClick($event, row, key, colIndex, rowIndex) {
        if (this.config.selectRow) {
            this.selectedRow = rowIndex;
        }
        if (this.config.selectCol && colIndex) {
            this.selectedCol = colIndex;
        }
        if (this.config.selectCell && colIndex) {
            this.selectedRow = rowIndex;
            this.selectedCol = colIndex;
        }
        if (this.config.clickEvent) {
            const value = {
                event: $event,
                row,
                key,
                rowId: rowIndex,
                colId: colIndex,
            };
            this.emitEvent(Event.onClick, value);
        }
    }
    onDoubleClick($event, row, key, colIndex, rowIndex) {
        const value = {
            event: $event,
            row,
            key,
            rowId: rowIndex,
            colId: colIndex,
        };
        this.emitEvent(Event.onDoubleClick, value);
    }
    onCheckboxSelect($event, row, rowIndex) {
        const value = {
            event: $event,
            row,
            rowId: rowIndex,
        };
        this.emitEvent(Event.onCheckboxSelect, value);
    }
    onRadioSelect($event, row, rowIndex) {
        const value = {
            event: $event,
            row,
            rowId: rowIndex,
        };
        this.emitEvent(Event.onRadioSelect, value);
    }
    onSelectAll() {
        this.isSelected = !this.isSelected;
        this.emitEvent(Event.onSelectAll, this.isSelected);
    }
    onSearch($event) {
        if (!this.config.serverPagination) {
            this.term = $event;
        }
        this.emitEvent(Event.onSearch, $event);
    }
    onGlobalSearch(value) {
        if (!this.config.serverPagination) {
            this.globalSearchTerm = value;
        }
        this.emitEvent(Event.onGlobalSearch, value);
    }
    onPagination(pagination) {
        this.page = pagination.page;
        this.limit = pagination.limit;
        this.emitEvent(Event.onPagination, pagination);
    }
    toggleCheckbox(rowIndex) {
        this.selectedCheckboxes.has(rowIndex) ?
            this.selectedCheckboxes.delete(rowIndex) :
            this.selectedCheckboxes.add(rowIndex);
    }
    collapseRow(rowIndex) {
        if (this.selectedDetailsTemplateRowId.has(rowIndex)) {
            this.selectedDetailsTemplateRowId.delete(rowIndex);
            this.emitEvent(Event.onRowCollapsedHide, rowIndex);
        }
        else {
            this.selectedDetailsTemplateRowId.add(rowIndex);
            this.emitEvent(Event.onRowCollapsedShow, rowIndex);
        }
    }
    doDecodePersistedState() {
        if (!this.config.persistState) {
            return;
        }
        const pagination = localStorage.getItem(Event.onPagination);
        const sort = localStorage.getItem(Event.onOrder);
        const search = localStorage.getItem(Event.onSearch);
        if (pagination) {
            this.onPagination(JSON.parse(pagination));
        }
        if (sort) {
            const { key, order } = JSON.parse(sort);
            this.bindApi({
                type: API.sortBy,
                value: { column: key, order },
            });
        }
        if (search) {
            this.bindApi({
                type: API.setInputValue,
                value: JSON.parse(search),
            });
        }
    }
    isRowCollapsed(rowIndex) {
        if (this.config.collapseAllRows) {
            return true;
        }
        return this.selectedDetailsTemplateRowId.has(rowIndex);
    }
    get loadingHeight() {
        const table = document.getElementById(this.id);
        if (table && table.rows && table.rows.length > 3) {
            const searchEnabled = this.config.searchEnabled ? 1 : 0;
            const headerEnabled = this.config.headerEnabled ? 1 : 0;
            const borderTrHeight = 1;
            const borderDivHeight = 2;
            return (table.rows.length - searchEnabled - headerEnabled) * (table.rows[3].offsetHeight - borderTrHeight) - borderDivHeight;
        }
        return 30;
    }
    get arrowDefinition() {
        return this.config.showDetailsArrow || typeof this.config.showDetailsArrow === 'undefined';
    }
    onRowContextMenu($event, row, key, colIndex, rowIndex) {
        if (!this.config.showContextMenu) {
            return;
        }
        $event.preventDefault();
        const value = {
            event: $event,
            row,
            key,
            rowId: rowIndex,
            colId: colIndex,
        };
        this.rowContextMenuPosition = {
            top: `${$event.y - 10}px`,
            left: `${$event.x - 10}px`,
            value,
        };
        this.emitEvent(Event.onRowContextMenu, value);
    }
    doApplyData(data) {
        const order = this.columns.find((c) => !!c.orderBy);
        if (order) {
            this.sortState.set(this.sortKey, (order.orderBy === 'asc') ? 'desc' : 'asc');
            this.orderBy(order);
        }
        else {
            this.data = [...data.currentValue];
        }
    }
    onDrop(event) {
        this.emitEvent(Event.onRowDrop, event);
        moveItemInArray(this.data, event.previousIndex, event.currentIndex);
    }
    // DO NOT REMOVE. It is called from parent component. See src/app/demo/api-doc/api-doc.component.ts
    apiEvent(event) {
        return this.bindApi(event);
    }
    // tslint:disable:no-big-function cognitive-complexity
    bindApi(event) {
        switch (event.type) {
            case API.rowContextMenuClicked:
                this.rowContextMenuPosition = {
                    top: null,
                    left: null,
                    value: null,
                };
                break;
            case API.toolPanelClicked:
                // TODO
                break;
            case API.toggleRowIndex:
                this.collapseRow(event.value);
                break;
            case API.toggleCheckbox:
                this.toggleCheckbox(event.value);
                break;
            case API.setInputValue:
                if (this.config.searchEnabled) {
                    event.value.forEach((input) => {
                        const element = document.getElementById(`search_${input.key}`);
                        if (!element) {
                            console.error(`Column '${input.key}' not available in the DOM. Have you misspelled a name?`);
                        }
                        else {
                            element.value = input.value;
                        }
                    });
                }
                this.onSearch(event.value);
                this.cdr.detectChanges();
                break;
            case API.onGlobalSearch:
                this.onGlobalSearch(event.value);
                this.cdr.detectChanges();
                break;
            case API.setRowClass:
                if (Array.isArray(event.value)) {
                    event.value.forEach((val) => this.styleService.setRowClass(val));
                    break;
                }
                this.styleService.setRowClass(event.value);
                this.cdr.detectChanges();
                break;
            case API.setCellClass:
                if (Array.isArray(event.value)) {
                    event.value.forEach((val) => this.styleService.setCellClass(val));
                    break;
                }
                this.styleService.setCellClass(event.value);
                break;
            case API.setRowStyle:
                if (Array.isArray(event.value)) {
                    event.value.forEach((val) => this.styleService.setRowStyle(val));
                    break;
                }
                this.styleService.setRowStyle(event.value);
                break;
            case API.setCellStyle:
                if (Array.isArray(event.value)) {
                    event.value.forEach((val) => this.styleService.setCellStyle(val));
                    break;
                }
                this.styleService.setCellStyle(event.value);
                break;
            case API.setTableClass:
                this.tableClass = event.value;
                this.cdr.detectChanges();
                break;
            case API.getPaginationTotalItems:
                return this.paginationComponent.paginationDirective.getTotalItems();
            case API.getPaginationCurrentPage:
                return this.paginationComponent.paginationDirective.getCurrent();
            case API.getPaginationLastPage:
                return this.paginationComponent.paginationDirective.getLastPage();
            case API.getNumberOfRowsPerPage:
                return this.paginationComponent.paginationDirective.isLastPage() ?
                    (this.paginationComponent.paginationDirective.getTotalItems() % this.limit) :
                    this.limit;
            case API.setPaginationCurrentPage:
                this.paginationComponent.paginationDirective.setCurrent(event.value);
                break;
            case API.setPaginationRange:
                this.paginationComponent.ranges = event.value;
                break;
            case API.setPaginationPreviousLabel:
                this.paginationComponent.previousLabel = event.value;
                break;
            case API.setPaginationNextLabel:
                this.paginationComponent.nextLabel = event.value;
                break;
            case API.setPaginationDisplayLimit:
                this.paginationComponent.changeLimit(event.value, true);
                break;
            case API.sortBy:
                const column = { title: '', key: event.value.column, orderBy: event.value.order };
                this.orderBy(column);
                this.cdr.detectChanges();
                break;
            default:
                break;
        }
    }
    setColumnOrder(key) {
        switch (this.sortState.get(key)) {
            case '':
            case undefined:
                this.sortState.set(key, 'desc');
                break;
            case 'asc':
                this.config.threeWaySort ?
                    this.sortState.set(key, '') :
                    this.sortState.set(key, 'desc');
                break;
            case 'desc':
                this.sortState.set(key, 'asc');
                break;
        }
        if (this.sortState.size > 1) {
            const temp = this.sortState.get(key);
            this.sortState.clear();
            this.sortState.set(key, temp);
        }
    }
    emitEvent(event, value) {
        this.event.emit({ event, value });
        if (this.config.persistState) {
            localStorage.setItem(event, JSON.stringify(value));
        }
        if (this.config.logger) {
            // tslint:disable-next-line:no-console
            console.log({ event, value });
        }
    }
};
BaseComponent.ɵfac = function BaseComponent_Factory(t) { return new (t || BaseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(StyleService)); };
BaseComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BaseComponent, selectors: [["ngx-table"]], contentQueries: function BaseComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵstaticContentQuery(dirIndex, TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rowTemplate = _t.first);
    } }, viewQuery: function BaseComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c2, true);
        ɵngcc0.ɵɵviewQuery(_c3, true);
        ɵngcc0.ɵɵviewQuery(CdkVirtualScrollViewport, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.paginationComponent = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contextMenu = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.viewPort = _t.first);
    } }, hostBindings: function BaseComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function BaseComponent_click_HostBindingHandler($event) { return ctx.onContextMenuClick($event.target); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { id: "id", toggleRowIndex: "toggleRowIndex", data: "data", configuration: "configuration", pagination: "pagination", groupRowsBy: "groupRowsBy", detailsTemplate: "detailsTemplate", summaryTemplate: "summaryTemplate", groupRowsHeaderTemplate: "groupRowsHeaderTemplate", filtersTemplate: "filtersTemplate", selectAllTemplate: "selectAllTemplate", noResultsTemplate: "noResultsTemplate", loadingTemplate: "loadingTemplate", additionalActionsTemplate: "additionalActionsTemplate", rowContextMenu: "rowContextMenu", columns: "columns" }, outputs: { event: "event" }, features: [ɵngcc0.ɵɵProvidersFeature([
            DefaultConfigService,
            GroupRowsService,
            StyleService,
        ]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 10, vars: 36, consts: [[1, "ngx-container"], [3, "id", "ngClass"], ["table-thead", "", 3, "config", "sortKey", "sortState", "selectAllTemplate", "filtersTemplate", "additionalActionsTemplate", "columns", "selectAll", "filter", "order", "event"], [4, "ngIf"], ["class", "ngx-draggable-row-area", "cdkDropList", "", 3, "cdkDropListDropped", 4, "ngIf"], [3, "id", "config", "pagination", "updateRange"], ["paginationComponent", ""], ["class", "ngx-table__table-row-context-menu", 3, "ngStyle", 4, "ngIf"], ["itemSize", "50", "class", "ngx-infinite-scroll-viewport", 4, "ngIf"], [1, "ngx-table__table-row-context-menu", 3, "ngStyle"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngFor", "ngForOf"], [3, "click", "contextmenu", "dblclick"], ["contextMenu", ""], ["class", "ngx-icon", 3, "ngClass", "click", 4, "ngIf"], [1, "ngx-icon", 3, "ngClass", "click"], ["itemSize", "50", 1, "ngx-infinite-scroll-viewport"], [4, "cdkVirtualFor", "cdkVirtualForOf"], [1, "ngx-form-checkbox"], ["type", "checkbox", 3, "id", "checked", "change"], [1, "ngx-form-icon"], ["type", "radio", "name", "radio", 3, "id", "change"], [3, "ngClass", "click", "contextmenu", "dblclick"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], ["cdkDropList", "", 1, "ngx-draggable-row-area", 3, "cdkDropListDropped"], ["cdkDrag", "", "cdkDragLockAxis", "y", 1, "ngx-draggable-row"], [3, "click", "dblclick"], [1, "ngx-table__body-empty"], [3, "ngTemplateOutlet", 4, "ngIf"], [3, "ngTemplateOutlet"], [1, "ngx-table__table-no-results"], [1, "ngx-table__body-loading"], [1, "ngx-table__table-loader-wrapper"], [1, "ngx-table__table-loader"]], template: function BaseComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "table", 1);
        ɵngcc0.ɵɵelementStart(2, "thead", 2);
        ɵngcc0.ɵɵlistener("selectAll", function BaseComponent_Template_thead_selectAll_2_listener() { return ctx.onSelectAll(); })("filter", function BaseComponent_Template_thead_filter_2_listener($event) { return ctx.onSearch($event); })("order", function BaseComponent_Template_thead_order_2_listener($event) { return ctx.orderBy($event); })("event", function BaseComponent_Template_thead_event_2_listener($event) { return ctx.emitEvent($event.event, $event.value); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, BaseComponent_tbody_3_Template, 4, 3, "tbody", 3);
        ɵngcc0.ɵɵtemplate(4, BaseComponent_tbody_4_Template, 2, 1, "tbody", 4);
        ɵngcc0.ɵɵtemplate(5, BaseComponent_tbody_5_Template, 4, 2, "tbody", 3);
        ɵngcc0.ɵɵtemplate(6, BaseComponent_tbody_6_Template, 4, 2, "tbody", 3);
        ɵngcc0.ɵɵtemplate(7, BaseComponent_tfoot_7_Template, 3, 6, "tfoot", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "pagination", 5, 6);
        ɵngcc0.ɵɵlistener("updateRange", function BaseComponent_Template_pagination_updateRange_8_listener($event) { return ctx.onPagination($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("ngx-table__table--tiny", ctx.config.tableLayout.style === "tiny")("ngx-table__table--normal", ctx.config.tableLayout.style === "normal")("ngx-table__table--big", ctx.config.tableLayout.style === "big")("ngx-table__table--borderless", ctx.config.tableLayout.borderless)("ngx-table__table--dark", ctx.config.tableLayout.theme === "dark")("ngx-table__table--hoverable", ctx.config.tableLayout.hover)("ngx-table__table--striped", ctx.config.tableLayout.striped)("ngx-table__horizontal-scroll", ctx.config.horizontalScroll && !ctx.config.isLoading);
        ɵngcc0.ɵɵproperty("id", ctx.id)("ngClass", ctx.tableClass === null || ctx.tableClass === "" ? "ngx-table" : ctx.tableClass);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassProp("ngx-infinite-scroll-viewport-thead", ctx.config.infiniteScroll);
        ɵngcc0.ɵɵproperty("config", ctx.config)("sortKey", ctx.sortKey)("sortState", ctx.sortState)("selectAllTemplate", ctx.selectAllTemplate)("filtersTemplate", ctx.filtersTemplate)("additionalActionsTemplate", ctx.additionalActionsTemplate)("columns", ctx.columns);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.data && !ctx.config.isLoading && !ctx.config.rowReorder);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.data && !ctx.config.isLoading && ctx.config.rowReorder);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.filterCount === 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.isLoading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.summaryTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("id", ctx.id)("config", ctx.config)("pagination", ctx.pagination);
        ɵngcc0.ɵɵattribute("id", "pagination" + ctx.id);
    } }, directives: function () { return [ɵngcc2.NgClass, TableTHeadComponent, ɵngcc2.NgIf, PaginationComponent, ɵngcc2.NgStyle, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgForOf, ɵngcc3.CdkVirtualScrollViewport, ɵngcc3.CdkFixedSizeVirtualScroll, ɵngcc3.CdkVirtualForOf, ɵngcc4.CdkDropList, ɵngcc4.CdkDrag]; }, pipes: function () { return [ɵngcc1.PaginatePipe, GlobalSearchPipe,
        SearchPipe,
        SortPipe,
        RenderPipe]; }, encapsulation: 2, changeDetection: 0 });
BaseComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ScrollDispatcher },
    { type: StyleService }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], BaseComponent.prototype, "configuration", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], BaseComponent.prototype, "data", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], BaseComponent.prototype, "pagination", void 0);
__decorate([
    Input(),
    __metadata("design:type", String)
], BaseComponent.prototype, "groupRowsBy", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], BaseComponent.prototype, "id", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], BaseComponent.prototype, "toggleRowIndex", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "detailsTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "summaryTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "groupRowsHeaderTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "filtersTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "selectAllTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "noResultsTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "loadingTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "additionalActionsTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "rowContextMenu", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], BaseComponent.prototype, "columns", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], BaseComponent.prototype, "event", void 0);
__decorate([
    ContentChild(TemplateRef, { static: true }),
    __metadata("design:type", TemplateRef)
], BaseComponent.prototype, "rowTemplate", void 0);
__decorate([
    ViewChild('paginationComponent'),
    __metadata("design:type", PaginationComponent)
], BaseComponent.prototype, "paginationComponent", void 0);
__decorate([
    ViewChild('contextMenu'),
    __metadata("design:type", Object)
], BaseComponent.prototype, "contextMenu", void 0);
__decorate([
    ViewChild(CdkVirtualScrollViewport),
    __metadata("design:type", CdkVirtualScrollViewport)
], BaseComponent.prototype, "viewPort", void 0);
__decorate([
    HostListener('document:click', ['$event.target']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], BaseComponent.prototype, "onContextMenuClick", null);
BaseComponent = __decorate([ __metadata("design:paramtypes", [ChangeDetectorRef,
        ScrollDispatcher,
        StyleService])
], BaseComponent);

let HeaderComponent = class HeaderComponent {
    constructor() {
        this.update = new EventEmitter();
    }
    unifyKey(key) {
        return key.replace('.', '_');
    }
    onSearch(input) {
        this.update.emit([
            { value: input.value, key: this.column.key },
        ]);
    }
};
HeaderComponent.ɵfac = function HeaderComponent_Factory(t) { return new (t || HeaderComponent)(); };
HeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderComponent, selectors: [["table-header"]], inputs: { column: "column" }, outputs: { update: "update" }, decls: 3, vars: 3, consts: [[3, "for"], ["type", "text", "aria-label", "Search", 1, "ngx-table__header-search", 3, "id", "placeholder", "input"], ["input", ""]], template: function HeaderComponent_Template(rf, ctx) { if (rf & 1) {
        const _r1 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "label", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1, 2);
        ɵngcc0.ɵɵlistener("input", function HeaderComponent_Template_input_input_1_listener() { ɵngcc0.ɵɵrestoreView(_r1); const _r0 = ɵngcc0.ɵɵreference(2); return ctx.onSearch(_r0); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵpropertyInterpolate1("for", "search_", ctx.unifyKey(ctx.column.key), "");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate1("id", "search_", ctx.unifyKey(ctx.column.key), "");
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx.column.placeholder ? ctx.column.placeholder : ctx.column.title);
    } }, encapsulation: 2, changeDetection: 0 });
__decorate([
    Input(),
    __metadata("design:type", Object)
], HeaderComponent.prototype, "column", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], HeaderComponent.prototype, "update", void 0);

let GlobalSearchPipe = class GlobalSearchPipe {
    transform(array, filter, filteredCountSubject) {
        filteredCountSubject.next(0);
        if (typeof array === 'undefined') {
            return;
        }
        if (typeof filter === 'undefined' || Object.keys(filter).length === 0 || filter === '') {
            filteredCountSubject.next(array.length);
            return array;
        }
        const arr = array.filter((row) => {
            const element = JSON.stringify(Object.values(row));
            const strings = filter.split(',');
            return strings.some((string) => element.toLocaleLowerCase().indexOf(string.trim().toLocaleLowerCase()) > -1);
        });
        filteredCountSubject.next(arr.length);
        return arr;
    }
};
GlobalSearchPipe.ɵfac = function GlobalSearchPipe_Factory(t) { return new (t || GlobalSearchPipe)(); };
GlobalSearchPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "global", type: GlobalSearchPipe, pure: true });

let FiltersService = class FiltersService {
    static getPath(p, o) {
        // https://github.com/dherges/ng-packagr/issues/696
        /* tslint:disable-next-line */
        const result = p.reduce((xs, x) => (xs && typeof xs[x] !== 'undefined') ? xs[x] : null, o);
        return result;
    }
};
FiltersService.ɵfac = function FiltersService_Factory(t) { return new (t || FiltersService)(); };
FiltersService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FiltersService, factory: FiltersService.ɵfac });

let RenderPipe = class RenderPipe {
    transform(row, key) {
        const split = key.split('.');
        return FiltersService.getPath(split, row);
    }
};
RenderPipe.ɵfac = function RenderPipe_Factory(t) { return new (t || RenderPipe)(); };
RenderPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "render", type: RenderPipe, pure: true });

let SearchPipe = class SearchPipe {
    constructor() {
        this.filters = {};
    }
    transform(array, filter, filteredCountSubject, config) {
        filteredCountSubject.next(0);
        if (typeof array === 'undefined') {
            return;
        }
        if (typeof filter === 'undefined') {
            filteredCountSubject.next(array.length);
            return array;
        }
        filter.forEach((f) => {
            this.filters[f.key] = f.value.toString().toLocaleLowerCase();
            if (Object.keys(f).length === 0 || f.value === '') {
                delete this.filters[f.key];
            }
        });
        if (config && config.groupRows) {
            return array.map((arr) => this.filterGroup(arr, filteredCountSubject));
        }
        return this.filterGroup(array, filteredCountSubject);
    }
    filterGroup(array, filteredCountSubject) {
        const arr = array.filter((obj) => {
            return Object.keys(this.filters).every((c) => {
                const split = c.split('.');
                const val = FiltersService.getPath(split, obj);
                const element = (typeof val === 'object') ? JSON.stringify(val) : val.toString().toLocaleLowerCase();
                const strings = this.filters[c].split(',');
                return strings.some((string) => element.indexOf(string.trim()) > -1);
            });
        });
        filteredCountSubject.next(arr.length);
        return arr;
    }
};
SearchPipe.ɵfac = function SearchPipe_Factory(t) { return new (t || SearchPipe)(); };
SearchPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "search", type: SearchPipe, pure: true });

var SortPipe_1;
let SortPipe = SortPipe_1 = class SortPipe {
    constructor() {
        this.defaultArray = [];
    }
    static isNaN(aV, bV) {
        return (isNaN(parseFloat(aV)) || !isFinite(aV)) || (isNaN(parseFloat(bV)) || !isFinite(bV));
    }
    static compare(a, b, key) {
        const split = key.split('.');
        const aPath = FiltersService.getPath(split, a);
        const bPath = FiltersService.getPath(split, b);
        const aValue = (aPath + '').toLowerCase();
        const bValue = (bPath + '').toLowerCase();
        if (SortPipe_1.isNaN(aPath, bPath)) {
            return aValue.localeCompare(bValue);
        }
        else {
            if (parseFloat(aPath) < parseFloat(bPath)) {
                return -1;
            }
            if (parseFloat(aPath) > parseFloat(bPath)) {
                return 1;
            }
        }
        return 0;
    }
    transform(array, filter, config) {
        if (this.defaultArray.length === 0) {
            this.defaultArray = array;
        }
        if (!filter.key || filter.key === '') {
            return array;
        }
        if (filter.order === '') {
            return this.defaultArray;
        }
        if (filter.order === 'asc') {
            return this.sortAsc(array, filter, config);
        }
        else {
            return this.sortDesc(array, filter, config);
        }
    }
    sortAsc(array, filter, config) {
        if (config && config.groupRows) {
            return array.map((arr) => arr.sort((a, b) => SortPipe_1.compare(a, b, filter.key)));
        }
        return array.sort((a, b) => SortPipe_1.compare(a, b, filter.key));
    }
    sortDesc(array, filter, config) {
        if (config && config.groupRows) {
            return array.map((arr) => arr.sort((a, b) => SortPipe_1.compare(b, a, filter.key)));
        }
        return array.sort((a, b) => SortPipe_1.compare(b, a, filter.key));
    }
};
SortPipe.ɵfac = function SortPipe_Factory(t) { return new (t || SortPipe)(); };
SortPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "sort", type: SortPipe, pure: true });

let TableTHeadComponent = class TableTHeadComponent {
    constructor(styleService) {
        this.styleService = styleService;
        this.menuActive = false;
        this.openedHeaderActionTemplate = null;
        this.onSelectAllBinded = this.onSelectAll.bind(this);
        this.filter = new EventEmitter();
        this.order = new EventEmitter();
        this.selectAll = new EventEmitter();
        this.event = new EventEmitter();
    }
    onClick(targetElement) {
        if (this.additionalActionMenu && !this.additionalActionMenu.nativeElement.contains(targetElement)) {
            this.menuActive = false;
        }
    }
    getColumnDefinition(column) {
        return column.searchEnabled || typeof column.searchEnabled === 'undefined';
    }
    orderBy(column) {
        this.order.emit(column);
    }
    isOrderEnabled(column) {
        const columnOrderEnabled = column.orderEnabled === undefined ? true : !!column.orderEnabled;
        return this.config.orderEnabled && columnOrderEnabled;
    }
    columnDrop(event) {
        moveItemInArray(this.columns, event.previousIndex, event.currentIndex);
    }
    onSearch($event) {
        this.filter.emit($event);
    }
    getColumnWidth(column) {
        if (column.width) {
            return column.width;
        }
        return this.config.fixedColumnWidth ? 100 / this.columns.length + '%' : null;
    }
    onSelectAll() {
        this.selectAll.emit();
    }
    onMouseDown(event, th) {
        if (!this.config.resizeColumn) {
            return;
        }
        this.th = th;
        this.startOffset = th.offsetWidth - event.pageX;
        this.event.emit({
            event: Event.onColumnResizeMouseDown,
            value: event,
        });
    }
    onMouseMove(event) {
        if (!this.config.resizeColumn) {
            return;
        }
        if (this.th && this.th.style) {
            this.th.style.width = this.startOffset + event.pageX + 'px';
            this.th.style.cursor = 'col-resize';
            this.th.style['user-select'] = 'none';
        }
    }
    onMouseUp(event) {
        if (!this.config.resizeColumn) {
            return;
        }
        this.event.emit({
            event: Event.onColumnResizeMouseUp,
            value: event,
        });
        this.th.style.cursor = 'default';
        this.th = undefined;
    }
    showHeaderActionTemplateMenu(column) {
        if (!column.headerActionTemplate) {
            console.error('Column [headerActionTemplate] property not defined');
        }
        if (this.openedHeaderActionTemplate === column.key) {
            this.openedHeaderActionTemplate = null;
            return;
        }
        this.openedHeaderActionTemplate = column.key;
    }
    showMenu() {
        if (!this.additionalActionsTemplate) {
            console.error('[additionalActionsTemplate] property not defined');
        }
        this.menuActive = !this.menuActive;
    }
};
TableTHeadComponent.ɵfac = function TableTHeadComponent_Factory(t) { return new (t || TableTHeadComponent)(ɵngcc0.ɵɵdirectiveInject(StyleService)); };
TableTHeadComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TableTHeadComponent, selectors: [["", "table-thead", ""]], viewQuery: function TableTHeadComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c11, true);
        ɵngcc0.ɵɵviewQuery(_c12, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.th = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.additionalActionMenu = _t.first);
    } }, hostBindings: function TableTHeadComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function TableTHeadComponent_click_HostBindingHandler($event) { return ctx.onClick($event.target); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { config: "config", columns: "columns", sortKey: "sortKey", sortState: "sortState", selectAllTemplate: "selectAllTemplate", filtersTemplate: "filtersTemplate", additionalActionsTemplate: "additionalActionsTemplate" }, outputs: { filter: "filter", order: "order", selectAll: "selectAll", event: "event" }, features: [ɵngcc0.ɵɵProvidersFeature([StyleService])], attrs: _c13, decls: 4, vars: 4, consts: [["class", "ngx-table__header", 4, "ngIf"], ["class", "ngx-table__header ngx-table__header--draggable", "cdkDropList", "", "cdkDropListOrientation", "horizontal", 3, "cdkDropListDropped", 4, "ngIf"], ["class", "ngx-table__sort-header", 4, "ngIf"], [4, "ngIf"], [1, "ngx-table__header"], [3, "width", 4, "ngIf"], [4, "ngFor", "ngForOf"], ["class", "ngx-table__header-cell-additional-actions", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngIf"], ["class", "ngx-form-checkbox", "for", "selectAllCheckboxes", 4, "ngIf"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["for", "selectAllCheckboxes", 1, "ngx-form-checkbox"], ["type", "checkbox", "id", "selectAllCheckboxes", 3, "change"], ["id", "selectAllCheckbox", 1, "ngx-form-icon"], [1, "ngx-table__header-cell", 3, "ngClass", "mousedown", "mouseup", "mousemove"], ["th", ""], [2, "display", "inline", 3, "click"], [1, "ngx-table__header-title"], ["class", "ngx-icon ngx-icon-pin", 4, "ngIf"], ["class", "ngx-icon ngx-icon-arrow-up", 4, "ngIf"], ["class", "ngx-icon ngx-icon-arrow-down", 4, "ngIf"], ["class", "ngx-dropdown", 4, "ngIf"], ["class", "ngx-table__column-resizer", 4, "ngIf"], [1, "ngx-icon", "ngx-icon-pin"], [1, "ngx-icon", "ngx-icon-arrow-up"], [1, "ngx-icon", "ngx-icon-arrow-down"], [1, "ngx-dropdown"], [1, "ngx-btn", "ngx-btn-link", 3, "click"], [1, "ngx-icon", "ngx-icon-more"], ["class", "ngx-menu ngx-table__table-menu", 4, "ngIf"], [1, "ngx-menu", "ngx-table__table-menu"], [3, "ngTemplateOutlet"], [1, "ngx-table__column-resizer"], [1, "ngx-table__header-cell-additional-actions"], ["additionalActionMenu", ""], [1, "ngx-icon", "ngx-icon-menu"], [3, "ngTemplateOutlet", 4, "ngIf"], ["cdkDropList", "", "cdkDropListOrientation", "horizontal", 1, "ngx-table__header", "ngx-table__header--draggable", 3, "cdkDropListDropped"], ["type", "checkbox", "id", "selectAllCheckboxesDrag", 3, "change"], ["id", "selectAllCheckboxDrag", 1, "ngx-form-icon"], ["cdkDragLockAxis", "x", "cdkDrag", "", 1, "ngx-table__header-cell", "ngx-table__header-cell--draggable", 3, "ngClass", "mousedown", "mouseup", "mousemove"], ["cdkDragHandle", "", 2, "display", "inline", 3, "click"], [1, "ngx-table__sort-header"], [3, "ngClass"], [3, "column", "update", 4, "ngIf"], [3, "column", "update"]], template: function TableTHeadComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, TableTHeadComponent_tr_0_Template, 4, 3, "tr", 0);
        ɵngcc0.ɵɵtemplate(1, TableTHeadComponent_tr_1_Template, 6, 6, "tr", 1);
        ɵngcc0.ɵɵtemplate(2, TableTHeadComponent_tr_2_Template, 4, 3, "tr", 2);
        ɵngcc0.ɵɵtemplate(3, TableTHeadComponent_ng_container_3_Template, 3, 1, "ng-container", 3);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.headerEnabled && !ctx.config.columnReorder);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.headerEnabled && ctx.config.columnReorder);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.searchEnabled && !ctx.filtersTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.filtersTemplate);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc2.NgTemplateOutlet, ɵngcc2.NgClass, ɵngcc4.CdkDropList, ɵngcc4.CdkDrag, ɵngcc4.CdkDragHandle, HeaderComponent], styles: [".cdk-drag-preview[_ngcontent-%COMP%] {\n      text-align: left;\n      padding-top: 9px;\n      padding-left: 4px;\n      color: #50596c;\n      border: 1px solid #e7e9ed;\n    }"], changeDetection: 0 });
TableTHeadComponent.ctorParameters = () => [
    { type: StyleService }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "config", void 0);
__decorate([
    Input(),
    __metadata("design:type", Array)
], TableTHeadComponent.prototype, "columns", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "sortKey", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "sortState", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "selectAllTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "filtersTemplate", void 0);
__decorate([
    Input(),
    __metadata("design:type", TemplateRef)
], TableTHeadComponent.prototype, "additionalActionsTemplate", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "filter", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "order", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "selectAll", void 0);
__decorate([
    Output(),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "event", void 0);
__decorate([
    ViewChild('th'),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "th", void 0);
__decorate([
    ViewChild('additionalActionMenu'),
    __metadata("design:type", Object)
], TableTHeadComponent.prototype, "additionalActionMenu", void 0);
__decorate([
    HostListener('document:click', ['$event.target']),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], TableTHeadComponent.prototype, "onClick", null);
TableTHeadComponent = __decorate([ __metadata("design:paramtypes", [StyleService])
], TableTHeadComponent);

let BaseModule = class BaseModule {
};
BaseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BaseModule });
BaseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BaseModule_Factory(t) { return new (t || BaseModule)(); }, imports: [[
            CommonModule,
            NgxPaginationModule,
            DragDropModule,
            ScrollingModule,
        ]] });

let TableModule = class TableModule {
};
TableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TableModule });
TableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TableModule_Factory(t) { return new (t || TableModule)(); }, providers: [], imports: [[CommonModule, BaseModule]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultConfigService, [{
        type: Injectable
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PaginationComponent, [{
        type: Component,
        args: [{
                selector: 'pagination',
                template: "<div class=\"ngx-pagination-wrapper\"\n     [style.display]=\"config.paginationEnabled ? '' : 'none'\"\n     [class.ngx-table__table--dark-pagination-wrapper]=\"config.tableLayout.theme === 'dark'\">\n  <div class=\"ngx-pagination-steps\">\n    <pagination-template\n      #paginationDirective=\"paginationApi\"\n      id=\"pagination-controls\"\n      [id]=\"id\"\n      [class.ngx-table__table--dark-pagination]=\"config.tableLayout.theme === 'dark'\"\n      [maxSize]=\"config.paginationMaxSize || 5\"\n      (pageChange)=\"onPageChange($event)\">\n      <ul class=\"ngx-pagination\"\n          role=\"navigation\"\n          [attr.aria-label]=\"screenReaderPaginationLabel\"\n          [class.responsive]=\"true\">\n        <li class=\"pagination-previous\" [class.disabled]=\"paginationDirective.isFirstPage()\" *ngIf=\"directionLinks\">\n          <a tabindex=\"0\" *ngIf=\"1 < paginationDirective.getCurrent()\" (keyup.enter)=\"paginationDirective.previous()\"\n             (click)=\"paginationDirective.previous()\"\n             [attr.aria-label]=\"previousLabel + ' ' + screenReaderPageLabel\">\n            {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n          </a>\n          <span *ngIf=\"paginationDirective.isFirstPage()\">\n                {{ previousLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n        <li class=\"small-screen\">\n          {{ paginationDirective.getCurrent() }} / {{ paginationDirective.getLastPage() }}\n        </li>\n        <li [class.current]=\"paginationDirective.getCurrent() === page.value\"\n            [class.ellipsis]=\"page.label === '...'\"\n            *ngFor=\"let page of paginationDirective.pages\">\n          <a tabindex=\"0\" (keyup.enter)=\"paginationDirective.setCurrent(page.value)\"\n             (click)=\"paginationDirective.setCurrent(page.value)\"\n             *ngIf=\"paginationDirective.getCurrent() !== page.value\">\n            <span class=\"show-for-sr\">{{ screenReaderPageLabel }} </span>\n            <span>{{ page.label }}</span>\n          </a>\n          <ng-container *ngIf=\"paginationDirective.getCurrent() === page.value\">\n            <span class=\"show-for-sr\">{{ screenReaderCurrentLabel }} </span>\n            <span>{{ page.label }}</span>\n          </ng-container>\n        </li>\n        <li class=\"pagination-next\" [class.disabled]=\"paginationDirective.isLastPage()\" *ngIf=\"directionLinks\">\n          <a tabindex=\"0\" *ngIf=\"!paginationDirective.isLastPage()\" (keyup.enter)=\"paginationDirective.next()\"\n             (click)=\"paginationDirective.next()\"\n             [attr.aria-label]=\"nextLabel + ' ' + screenReaderPageLabel\">\n            {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n          </a>\n          <span *ngIf=\"paginationDirective.isLastPage()\">\n                 {{ nextLabel }} <span class=\"show-for-sr\">{{ screenReaderPageLabel }}</span>\n            </span>\n        </li>\n      </ul>\n    </pagination-template>\n  </div>\n  <div class=\"ngx-pagination-range\"\n       #paginationRange\n       [class.ngx-table__table--dark-pagination-range]=\"config.tableLayout.theme === 'dark'\"\n       *ngIf=\"config.paginationRangeEnabled\">\n    <div class=\"ngx-dropdown ngx-pagination-range-dropdown\"\n         id=\"rowAmount\">\n      <div class=\"ngx-btn-group\">\n        <div class=\"ngx-pagination-range-dropdown-button\"\n             (click)=\"showRange = !showRange\">\n          {{selectedLimit}} <i class=\"ngx-icon ngx-icon-arrow-down\"></i>\n        </div>\n        <ul class=\"ngx-menu\" *ngIf=\"showRange\">\n          <li class=\"ngx-pagination-range-dropdown-button-item\"\n              [class.ngx-pagination-range--selected]=\"limit === selectedLimit\"\n              (click)=\"changeLimit(limit, false)\"\n              *ngFor=\"let limit of ranges\">\n            <span>{{limit}}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { updateRange: [{
            type: Output
        }], onClick: [{
            type: HostListener,
            args: ['document:click', ['$event.target']]
        }], paginationDirective: [{
            type: ViewChild,
            args: ['paginationDirective', { static: true }]
        }], paginationRange: [{
            type: ViewChild,
            args: ['paginationRange']
        }], pagination: [{
            type: Input
        }], config: [{
            type: Input
        }], id: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GroupRowsService, [{
        type: Injectable
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StyleService, [{
        type: Injectable
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-table',
                providers: [
                    DefaultConfigService,
                    GroupRowsService,
                    StyleService,
                ],
                template: "<div class=\"ngx-container\">\n  <table\n    [id]=\"id\"\n    [ngClass]=\"tableClass === null || tableClass === '' ? 'ngx-table' : tableClass\"\n    [class.ngx-table__table--tiny]=\"config.tableLayout.style === 'tiny'\"\n    [class.ngx-table__table--normal]=\"config.tableLayout.style === 'normal'\"\n    [class.ngx-table__table--big]=\"config.tableLayout.style === 'big'\"\n    [class.ngx-table__table--borderless]=\"config.tableLayout.borderless\"\n    [class.ngx-table__table--dark]=\"config.tableLayout.theme === 'dark'\"\n    [class.ngx-table__table--hoverable]=\"config.tableLayout.hover\"\n    [class.ngx-table__table--striped]=\"config.tableLayout.striped\"\n    [class.ngx-table__horizontal-scroll]=\"config.horizontalScroll && !config.isLoading\"\n  >\n    <thead\n      [class.ngx-infinite-scroll-viewport-thead]=\"config.infiniteScroll\"\n      table-thead\n      [config]=\"config\"\n      [sortKey]=\"sortKey\"\n      [sortState]=\"sortState\"\n      [selectAllTemplate]=\"selectAllTemplate\"\n      [filtersTemplate]=\"filtersTemplate\"\n      [additionalActionsTemplate]=\"additionalActionsTemplate\"\n      [columns]=\"columns\"\n      (selectAll)=\"onSelectAll()\"\n      (filter)=\"onSearch($event)\"\n      (order)=\"orderBy($event)\"\n      (event)=\"emitEvent($event.event, $event.value)\"\n    ></thead>\n    <tbody *ngIf=\"data && !config.isLoading && !config.rowReorder\">\n      <ng-container *ngIf=\"rowTemplate\">\n        <ul\n          class=\"ngx-table__table-row-context-menu\"\n          [ngStyle]=\"{\n            position: 'absolute',\n            top: rowContextMenuPosition.top,\n            left: rowContextMenuPosition.left\n          }\"\n          *ngIf=\"rowContextMenuPosition.top\"\n        >\n          <ng-container\n            [ngTemplateOutlet]=\"rowContextMenu\"\n            [ngTemplateOutletContext]=\"{ $implicit: rowContextMenuPosition.value }\"\n          >\n          </ng-container>\n        </ul>\n        <ng-container *ngIf=\"!config.infiniteScroll\">\n          <ng-container\n            *ngFor=\"\n              let row of data\n                | sort: sortBy\n                | search: term:filteredCountSubject\n                | global: globalSearchTerm:filteredCountSubject\n                | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n              let rowIndex = index\n            \"\n          >\n            <tr\n              (click)=\"onClick($event, row, '', null, rowIndex)\"\n              #contextMenu\n              (contextmenu)=\"onRowContextMenu($event, row, '', null, rowIndex)\"\n              (dblclick)=\"onDoubleClick($event, row, '', null, rowIndex)\"\n              [class.ngx-table__table-row--selected]=\"\n                rowIndex === selectedRow && !config.selectCell\n              \"\n            >\n              <ng-container\n                [ngTemplateOutlet]=\"rowTemplate\"\n                [ngTemplateOutletContext]=\"{ $implicit: row, index: rowIndex }\"\n              >\n              </ng-container>\n              <td *ngIf=\"config.detailsTemplate\">\n                <span\n                  class=\"ngx-icon\"\n                  *ngIf=\"arrowDefinition\"\n                  [ngClass]=\"\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\n                  \"\n                  (click)=\"collapseRow(rowIndex)\"\n                >\n                </span>\n              </td>\n            </tr>\n            <tr\n              *ngIf=\"\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\n                config.collapseAllRows\n              \"\n            >\n              <td [attr.colspan]=\"columns.length + 1\">\n                <ng-container\n                  [ngTemplateOutlet]=\"detailsTemplate\"\n                  [ngTemplateOutletContext]=\"{ $implicit: row, index: rowIndex }\"\n                >\n                </ng-container>\n              </td>\n            </tr>\n          </ng-container>\n        </ng-container>\n        <cdk-virtual-scroll-viewport\n          itemSize=\"50\"\n          *ngIf=\"config.infiniteScroll\"\n          class=\"ngx-infinite-scroll-viewport\"\n        >\n          <ng-container\n            *cdkVirtualFor=\"\n              let row of data\n                | sort: sortBy\n                | search: term:filteredCountSubject\n                | global: globalSearchTerm:filteredCountSubject;\n              let rowIndex = index\n            \"\n          >\n            <tr\n              (click)=\"onClick($event, row, '', null, rowIndex)\"\n              #contextMenu\n              (contextmenu)=\"onRowContextMenu($event, row, '', null, rowIndex)\"\n              (dblclick)=\"onDoubleClick($event, row, '', null, rowIndex)\"\n              [class.ngx-table__table-row--selected]=\"\n                rowIndex === selectedRow && !config.selectCell\n              \"\n            >\n              <ng-container\n                [ngTemplateOutlet]=\"rowTemplate\"\n                [ngTemplateOutletContext]=\"{ $implicit: row, index: rowIndex }\"\n              >\n              </ng-container>\n              <td *ngIf=\"config.detailsTemplate\">\n                <span\n                  class=\"ngx-icon\"\n                  *ngIf=\"arrowDefinition\"\n                  [ngClass]=\"\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\n                  \"\n                  (click)=\"collapseRow(rowIndex)\"\n                >\n                </span>\n              </td>\n            </tr>\n            <tr\n              *ngIf=\"\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\n                config.collapseAllRows\n              \"\n            >\n              <td [attr.colspan]=\"columns.length + 1\">\n                <ng-container\n                  [ngTemplateOutlet]=\"detailsTemplate\"\n                  [ngTemplateOutletContext]=\"{ $implicit: row, index: rowIndex }\"\n                >\n                </ng-container>\n              </td>\n            </tr>\n          </ng-container>\n        </cdk-virtual-scroll-viewport>\n      </ng-container>\n      <ng-container *ngIf=\"!rowTemplate && !config.groupRows\">\n        <ul\n          class=\"ngx-table__table-row-context-menu\"\n          [ngStyle]=\"{\n            position: 'absolute',\n            top: rowContextMenuPosition.top,\n            left: rowContextMenuPosition.left\n          }\"\n          *ngIf=\"rowContextMenuPosition.top\"\n        >\n          <ng-container\n            [ngTemplateOutlet]=\"rowContextMenu\"\n            [ngTemplateOutletContext]=\"{ $implicit: rowContextMenuPosition.value }\"\n          >\n          </ng-container>\n        </ul>\n        <ng-container *ngIf=\"!config.infiniteScroll\">\n          <ng-container\n            *ngFor=\"\n              let row of data\n                | sort: sortBy\n                | search: term:filteredCountSubject\n                | global: globalSearchTerm:filteredCountSubject\n                | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n              let rowIndex = index\n            \"\n          >\n            <tr\n              [class.ngx-table__table-row--selected]=\"\n                rowIndex === selectedRow && !config.selectCell\n              \"\n            >\n              <td *ngIf=\"config.checkboxes\">\n                <label class=\"ngx-form-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"checkbox-{{ rowIndex }}\"\n                    [checked]=\"isSelected || selectedCheckboxes.has(rowIndex)\"\n                    (change)=\"onCheckboxSelect($event, row, rowIndex)\"\n                  />\n                  <em class=\"ngx-form-icon\"></em>\n                </label>\n              </td>\n              <td *ngIf=\"config.radio\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    id=\"radio-{{ rowIndex }}\"\n                    name=\"radio\"\n                    (change)=\"onRadioSelect($event, row, rowIndex)\"\n                  />\n                </label>\n              </td>\n              <ng-container *ngFor=\"let column of columns; let colIndex = index\">\n                <td\n                  (click)=\"onClick($event, row, column.key, colIndex, rowIndex)\"\n                  #contextMenu\n                  (contextmenu)=\"onRowContextMenu($event, row, column.key, colIndex, rowIndex)\"\n                  (dblclick)=\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\"\n                  [class.pinned-left]=\"column.pinned\"\n                  [ngClass]=\"column.cssClass ? column.cssClass.name : ''\"\n                  [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n                  [class.ngx-table__table-col--selected]=\"\n                    colIndex === selectedCol && !config.selectCell\n                  \"\n                  [class.ngx-table__table-cell--selected]=\"\n                    colIndex === selectedCol &&\n                    rowIndex === selectedRow &&\n                    !config.selectCol &&\n                    !config.selectRow\n                  \"\n                >\n                  <div *ngIf=\"!column.cellTemplate\">{{ row | render: column.key }}</div>\n                  <ng-container\n                    *ngIf=\"column.cellTemplate\"\n                    [ngTemplateOutlet]=\"column.cellTemplate\"\n                    [ngTemplateOutletContext]=\"{\n                      $implicit: row,\n                      rowIndex: rowIndex,\n                      column: column\n                    }\"\n                  >\n                  </ng-container>\n                </td>\n              </ng-container>\n              <td *ngIf=\"config.additionalActions || config.detailsTemplate\">\n                <span\n                  class=\"ngx-icon\"\n                  *ngIf=\"arrowDefinition\"\n                  [ngClass]=\"\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\n                  \"\n                  (click)=\"collapseRow(rowIndex)\"\n                >\n                </span>\n              </td>\n            </tr>\n            <tr\n              *ngIf=\"\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\n                config.collapseAllRows\n              \"\n            >\n              <td *ngIf=\"config.checkboxes || config.radio\"></td>\n              <td [attr.colspan]=\"columns.length + 1\">\n                <ng-container\n                  [ngTemplateOutlet]=\"detailsTemplate\"\n                  [ngTemplateOutletContext]=\"{ $implicit: row, index: rowIndex }\"\n                >\n                </ng-container>\n              </td>\n            </tr>\n          </ng-container>\n        </ng-container>\n        <!-- infinite scroll -->\n        <cdk-virtual-scroll-viewport\n          itemSize=\"50\"\n          *ngIf=\"config.infiniteScroll\"\n          class=\"ngx-infinite-scroll-viewport\"\n        >\n          <ng-container\n            *cdkVirtualFor=\"\n              let row of data\n                | sort: sortBy\n                | search: term:filteredCountSubject\n                | global: globalSearchTerm:filteredCountSubject;\n              let rowIndex = index\n            \"\n          >\n            <tr\n              [class.ngx-table__table-row--selected]=\"\n                rowIndex === selectedRow && !config.selectCell\n              \"\n            >\n              <td *ngIf=\"config.checkboxes\">\n                <label class=\"ngx-form-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"checkbox-infinite-scroll-{{ rowIndex }}\"\n                    [checked]=\"isSelected || selectedCheckboxes.has(rowIndex)\"\n                    (change)=\"onCheckboxSelect($event, row, rowIndex)\"\n                  />\n                  <em class=\"ngx-form-icon\"></em>\n                </label>\n              </td>\n              <td *ngIf=\"config.radio\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    id=\"radio-infinite-scroll-{{ rowIndex }}\"\n                    name=\"radio\"\n                    (change)=\"onRadioSelect($event, row, rowIndex)\"\n                  />\n                </label>\n              </td>\n              <ng-container *ngFor=\"let column of columns; let colIndex = index\">\n                <td\n                  (click)=\"onClick($event, row, column.key, colIndex, rowIndex)\"\n                  #contextMenu\n                  (contextmenu)=\"onRowContextMenu($event, row, column.key, colIndex, rowIndex)\"\n                  (dblclick)=\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\"\n                  [class.pinned-left]=\"column.pinned\"\n                  [ngClass]=\"column.cssClass ? column.cssClass.name : ''\"\n                  [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n                  [class.ngx-table__table-col--selected]=\"\n                    colIndex === selectedCol && !config.selectCell\n                  \"\n                  [class.ngx-table__table-cell--selected]=\"\n                    colIndex === selectedCol &&\n                    rowIndex === selectedRow &&\n                    !config.selectCol &&\n                    !config.selectRow\n                  \"\n                >\n                  <div *ngIf=\"!column.cellTemplate\">{{ row | render: column.key }}</div>\n                  <ng-container\n                    *ngIf=\"column.cellTemplate\"\n                    [ngTemplateOutlet]=\"column.cellTemplate\"\n                    [ngTemplateOutletContext]=\"{\n                      $implicit: row,\n                      rowIndex: rowIndex,\n                      column: column\n                    }\"\n                  >\n                  </ng-container>\n                </td>\n              </ng-container>\n              <td *ngIf=\"config.additionalActions || config.detailsTemplate\">\n                <span\n                  class=\"ngx-icon\"\n                  *ngIf=\"arrowDefinition\"\n                  [ngClass]=\"\n                    isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\n                  \"\n                  (click)=\"collapseRow(rowIndex)\"\n                >\n                </span>\n              </td>\n            </tr>\n            <tr\n              *ngIf=\"\n                (config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) ||\n                config.collapseAllRows\n              \"\n            >\n              <td *ngIf=\"config.checkboxes || config.radio\"></td>\n              <td [attr.colspan]=\"columns.length + 1\">\n                <ng-container\n                  [ngTemplateOutlet]=\"detailsTemplate\"\n                  [ngTemplateOutletContext]=\"{ $implicit: row, index: rowIndex }\"\n                >\n                </ng-container>\n              </td>\n            </tr>\n          </ng-container>\n        </cdk-virtual-scroll-viewport>\n      </ng-container>\n      <ng-container *ngIf=\"!rowTemplate && config.groupRows\">\n        <ng-container\n          *ngFor=\"\n            let group of grouped\n              | sort: sortBy:config\n              | search: term:filteredCountSubject:config\n              | global: globalSearchTerm:filteredCountSubject\n              | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n            let rowIndex = index\n          \"\n        >\n          <tr>\n            <ng-container *ngIf=\"!groupRowsHeaderTemplate\">\n              <td [attr.colspan]=\"columns.length\">\n                <div>{{ group[0][groupRowsBy] }} ({{ group.length }})</div>\n              </td>\n            </ng-container>\n            <ng-container\n              *ngIf=\"groupRowsHeaderTemplate\"\n              [ngTemplateOutlet]=\"groupRowsHeaderTemplate\"\n              [ngTemplateOutletContext]=\"{\n                total: group.length,\n                key: groupRowsBy,\n                value: group[0] ? group[0][groupRowsBy] : '',\n                group: group,\n                index: rowIndex\n              }\"\n            >\n            </ng-container>\n            <td>\n              <span\n                class=\"ngx-icon\"\n                *ngIf=\"arrowDefinition\"\n                [ngClass]=\"\n                  isRowCollapsed(rowIndex) ? 'ngx-icon-arrow-down' : 'ngx-icon-arrow-right'\n                \"\n                (click)=\"collapseRow(rowIndex)\"\n              >\n              </span>\n            </td>\n          </tr>\n          <ng-container *ngIf=\"selectedDetailsTemplateRowId.has(rowIndex)\">\n            <tr *ngFor=\"let row of group\">\n              <td *ngFor=\"let column of columns\">\n                {{ row | render: column.key }}\n                <!-- TODO allow users to add groupRowsTemplateRef -->\n              </td>\n              <td></td>\n            </tr>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </tbody>\n    <tbody\n      *ngIf=\"data && !config.isLoading && config.rowReorder\"\n      class=\"ngx-draggable-row-area\"\n      cdkDropList\n      (cdkDropListDropped)=\"onDrop($event)\"\n    >\n      <ng-container *ngIf=\"!rowTemplate && !config.groupRows\">\n        <ng-container\n          *ngFor=\"\n            let row of data\n              | sort: sortBy\n              | search: term:filteredCountSubject\n              | global: globalSearchTerm:filteredCountSubject\n              | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n            let rowIndex = index\n          \"\n        >\n          <tr class=\"ngx-draggable-row\" cdkDrag cdkDragLockAxis=\"y\">\n            <td *ngIf=\"config.checkboxes\">\n              <label class=\"ngx-form-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  id=\"checkbox-draggable-{{ rowIndex }}\"\n                  [checked]=\"isSelected || selectedCheckboxes.has(rowIndex)\"\n                  (change)=\"onCheckboxSelect($event, row, rowIndex)\"\n                />\n                <em class=\"ngx-form-icon\"></em>\n              </label>\n            </td>\n            <td *ngIf=\"config.radio\">\n              <label>\n                <input\n                  type=\"radio\"\n                  id=\"radio-draggable-{{ rowIndex }}\"\n                  name=\"radio\"\n                  (change)=\"onRadioSelect($event, row, rowIndex)\"\n                />\n              </label>\n            </td>\n            <ng-container *ngFor=\"let column of columns; let colIndex = index\">\n              <td\n                (click)=\"onClick($event, row, column.key, colIndex, rowIndex)\"\n                (dblclick)=\"onDoubleClick($event, row, column.key, colIndex, rowIndex)\"\n                [class.ngx-table__table-col--selected]=\"\n                  colIndex === selectedCol && !config.selectCell\n                \"\n                [class.ngx-table__table-cell--selected]=\"\n                  colIndex === selectedCol &&\n                  rowIndex === selectedRow &&\n                  !config.selectCol &&\n                  !config.selectRow\n                \"\n              >\n                <div>{{ row | render: column.key }}</div>\n              </td>\n            </ng-container>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </tbody>\n    <tbody *ngIf=\"filterCount === 0\">\n      <tr class=\"ngx-table__body-empty\">\n        <ng-container *ngIf=\"noResultsTemplate\" [ngTemplateOutlet]=\"noResultsTemplate\">\n        </ng-container>\n        <td [attr.colspan]=\"columns && columns.length + 1\" *ngIf=\"!noResultsTemplate\">\n          <div class=\"ngx-table__table-no-results\">\n            No results\n          </div>\n        </td>\n      </tr>\n    </tbody>\n    <tbody *ngIf=\"config.isLoading\">\n      <tr class=\"ngx-table__body-loading\">\n        <ng-container *ngIf=\"loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"> </ng-container>\n        <td [attr.colspan]=\"columns && columns.length + 1\" *ngIf=\"!loadingTemplate\">\n          <div [style.height.px]=\"loadingHeight\" class=\"ngx-table__table-loader-wrapper\">\n            <div class=\"ngx-table__table-loader\"></div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n    <tfoot *ngIf=\"summaryTemplate\">\n      <tr>\n        <ng-container\n          [ngTemplateOutlet]=\"summaryTemplate\"\n          [ngTemplateOutletContext]=\"{ total: data.length, limit: limit, page: page }\"\n        >\n        </ng-container>\n      </tr>\n    </tfoot>\n  </table>\n  <pagination\n    [attr.id]=\"'pagination' + id\"\n    [id]=\"id\"\n    #paginationComponent\n    [config]=\"config\"\n    [pagination]=\"pagination\"\n    (updateRange)=\"onPagination($event)\"\n  >\n  </pagination>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.ScrollDispatcher }, { type: StyleService }]; }, { id: [{
            type: Input
        }], event: [{
            type: Output
        }], onContextMenuClick: [{
            type: HostListener,
            args: ['document:click', ['$event.target']]
        }], toggleRowIndex: [{
            type: Input
        }], data: [{
            type: Input
        }], configuration: [{
            type: Input
        }], pagination: [{
            type: Input
        }], groupRowsBy: [{
            type: Input
        }], detailsTemplate: [{
            type: Input
        }], summaryTemplate: [{
            type: Input
        }], groupRowsHeaderTemplate: [{
            type: Input
        }], filtersTemplate: [{
            type: Input
        }], selectAllTemplate: [{
            type: Input
        }], noResultsTemplate: [{
            type: Input
        }], loadingTemplate: [{
            type: Input
        }], additionalActionsTemplate: [{
            type: Input
        }], rowContextMenu: [{
            type: Input
        }], columns: [{
            type: Input
        }], rowTemplate: [{
            type: ContentChild,
            args: [TemplateRef, { static: true }]
        }], paginationComponent: [{
            type: ViewChild,
            args: ['paginationComponent']
        }], contextMenu: [{
            type: ViewChild,
            args: ['contextMenu']
        }], viewPort: [{
            type: ViewChild,
            args: [CdkVirtualScrollViewport]
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderComponent, [{
        type: Component,
        args: [{
                selector: 'table-header',
                template: "<label for=\"search_{{ unifyKey(column.key) }}\">\n  <input type=\"text\"\n         id=\"search_{{ unifyKey(column.key) }}\"\n         aria-label=\"Search\"\n         placeholder=\"{{ column.placeholder ? column.placeholder : column.title }}\"\n         class=\"ngx-table__header-search\"\n         #input\n         (input)=\"onSearch(input)\"\n  >\n</label>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { update: [{
            type: Output
        }], column: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GlobalSearchPipe, [{
        type: Pipe,
        args: [{
                name: 'global'
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FiltersService, [{
        type: Injectable
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RenderPipe, [{
        type: Pipe,
        args: [{
                name: 'render'
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SearchPipe, [{
        type: Pipe,
        args: [{
                name: 'search'
            }]
    }], function () { return []; }, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SortPipe, [{
        type: Pipe,
        args: [{
                name: 'sort'
            }]
    }], function () { return []; }, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TableTHeadComponent, [{
        type: Component,
        args: [{
                selector: '[table-thead]',
                template: "<tr class=\"ngx-table__header\" *ngIf=\"config.headerEnabled && !config.columnReorder\">\n  <th *ngIf=\"config.checkboxes || config.radio\" [style.width]=\"'3%'\">\n    <ng-container\n      *ngIf=\"selectAllTemplate && config.checkboxes\"\n      [ngTemplateOutlet]=\"selectAllTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: onSelectAllBinded }\">\n    </ng-container>\n    <label class=\"ngx-form-checkbox\"\n           for=\"selectAllCheckboxes\"\n           *ngIf=\"!selectAllTemplate && config.checkboxes\">\n      <input type=\"checkbox\" id=\"selectAllCheckboxes\" (change)=\"onSelectAll()\">\n      <em class=\"ngx-form-icon\" id=\"selectAllCheckbox\"></em>\n    </label>\n  </th>\n  <ng-container *ngFor=\"let column of columns; let colIndex = index; let last = last\">\n    <th class=\"ngx-table__header-cell\"\n        [class.pinned-left]=\"column.pinned\"\n        [ngClass]=\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\"\n        [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n        #th\n        [style.width]=\"getColumnWidth(column)\"\n        (mousedown)=\"onMouseDown($event, th)\"\n        (mouseup)=\"onMouseUp($event)\"\n        (mousemove)=\"onMouseMove($event)\">\n      <div (click)=\"orderBy(column)\" style=\"display: inline\" [class.pointer]=\"isOrderEnabled(column)\">\n        <div class=\"ngx-table__header-title\">{{ column.title }}<span>&nbsp;</span>\n          <em class=\"ngx-icon ngx-icon-pin\" *ngIf=\"column.pinned\"></em>\n          <div [style.display]=\"config.orderEnabled ? 'inline' : 'none' \">\n            <em *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\"\n               class=\"ngx-icon ngx-icon-arrow-up\">\n            </em>\n            <em *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\"\n               class=\"ngx-icon ngx-icon-arrow-down\">\n            </em>\n          </div>\n        </div>\n      </div>\n      <div class=\"ngx-dropdown\"\n           *ngIf=\"!!column.headerActionTemplate\">\n        <a class=\"ngx-btn ngx-btn-link\" (click)=\"showHeaderActionTemplateMenu(column)\">\n          <span class=\"ngx-icon ngx-icon-more\"></span>\n        </a>\n        <div class=\"ngx-menu ngx-table__table-menu\"\n            *ngIf=\"column.key === openedHeaderActionTemplate\">\n          <ng-container\n            [ngTemplateOutlet]=\"column.headerActionTemplate\">\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"ngx-table__column-resizer\" *ngIf=\"config.resizeColumn && !last\"></div>\n    </th>\n  </ng-container>\n  <th *ngIf=\"config.additionalActions || config.detailsTemplate || config.collapseAllRows || config.groupRows\"\n      class=\"ngx-table__header-cell-additional-actions\">\n    <div class=\"ngx-dropdown\"\n         #additionalActionMenu\n         *ngIf=\"config.additionalActions\">\n      <a class=\"ngx-btn ngx-btn-link\" (click)=\"showMenu()\">\n        <span class=\"ngx-icon ngx-icon-menu\"></span>\n      </a>\n      <ul class=\"ngx-menu ngx-table__table-menu\"\n          *ngIf=\"menuActive\">\n        <ng-container\n          *ngIf=\"additionalActionsTemplate\"\n          [ngTemplateOutlet]=\"additionalActionsTemplate\">\n        </ng-container>\n      </ul>\n    </div>\n  </th>\n</tr>\n<tr class=\"ngx-table__header ngx-table__header--draggable\"\n    *ngIf=\"config.headerEnabled && config.columnReorder\"\n    cdkDropList\n    cdkDropListOrientation=\"horizontal\"\n    (cdkDropListDropped)=\"columnDrop($event)\"\n>\n  <th [style.width]=\"'3%'\">\n    <ng-container\n      *ngIf=\"selectAllTemplate && config.checkboxes\"\n      [ngTemplateOutlet]=\"selectAllTemplate\"\n      [ngTemplateOutletContext]=\"{ $implicit: onSelectAllBinded }\">\n    </ng-container>\n    <label class=\"ngx-form-checkbox\"\n           for=\"selectAllCheckboxes\"\n           *ngIf=\"!selectAllTemplate && config.checkboxes\">\n      <input type=\"checkbox\" id=\"selectAllCheckboxesDrag\" (change)=\"onSelectAll()\">\n      <em class=\"ngx-form-icon\" id=\"selectAllCheckboxDrag\"></em>\n    </label>\n  </th>\n  <ng-container *ngFor=\"let column of columns; let colIndex = index; let last = last\">\n    <th class=\"ngx-table__header-cell ngx-table__header-cell--draggable\"\n        cdkDragLockAxis=\"x\"\n        cdkDrag\n        [class.pinned-left]=\"column.pinned\"\n        [ngClass]=\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\"\n        [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\"\n        #th\n        [style.width]=\"getColumnWidth(column)\"\n        (mousedown)=\"onMouseDown($event, th)\"\n        (mouseup)=\"onMouseUp($event)\"\n        (mousemove)=\"onMouseMove($event)\">\n      <div (click)=\"orderBy(column)\" style=\"display: inline\"\n           cdkDragHandle\n           [class.pointer]=\"isOrderEnabled(column)\">\n        <div class=\"ngx-table__header-title\">{{ column.title }}<span>&nbsp;</span>\n          <em class=\"ngx-icon ngx-icon-pin\" *ngIf=\"column.pinned\"></em>\n          <div [style.display]=\"config.orderEnabled ? 'inline' : 'none' \">\n            <em *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'asc'\"\n                class=\"ngx-icon ngx-icon-arrow-up\">\n            </em>\n            <em *ngIf=\"sortKey === column.key && this.sortState.get(sortKey) === 'desc'\"\n                class=\"ngx-icon ngx-icon-arrow-down\">\n            </em>\n          </div>\n        </div>\n      </div>\n      <div class=\"ngx-dropdown\"\n           *ngIf=\"!!column.headerActionTemplate\">\n        <a class=\"ngx-btn ngx-btn-link\" (click)=\"showHeaderActionTemplateMenu(column)\">\n          <span class=\"ngx-icon ngx-icon-more\"></span>\n        </a>\n        <div class=\"ngx-menu ngx-table__table-menu\"\n             *ngIf=\"column.key === openedHeaderActionTemplate\">\n          <ng-container\n            [ngTemplateOutlet]=\"column.headerActionTemplate\">\n          </ng-container>\n        </div>\n      </div>\n      <div class=\"ngx-table__column-resizer\" *ngIf=\"config.resizeColumn && !last\"></div>\n    </th>\n  </ng-container>\n  <th *ngIf=\"config.additionalActions || config.detailsTemplate || config.collapseAllRows || config.groupRows\"\n      class=\"ngx-table__header-cell-additional-actions\">\n    <div class=\"ngx-dropdown\"\n         #additionalActionMenu\n         *ngIf=\"config.additionalActions\">\n      <a class=\"ngx-btn ngx-btn-link\" (click)=\"showMenu()\">\n        <span class=\"ngx-icon ngx-icon-menu\"></span>\n      </a>\n      <ul class=\"ngx-menu ngx-table__table-menu\"\n          *ngIf=\"menuActive\">\n        <ng-container\n          *ngIf=\"additionalActionsTemplate\"\n          [ngTemplateOutlet]=\"additionalActionsTemplate\">\n        </ng-container>\n      </ul>\n    </div>\n  </th>\n</tr>\n<tr *ngIf=\"config.searchEnabled && !filtersTemplate\"\n    class=\"ngx-table__sort-header\">\n  <th *ngIf=\"config.checkboxes || config.radio\"></th>\n  <ng-container *ngFor=\"let column of columns; let colIndex = index\">\n    <th\n      [ngClass]=\"column.cssClass && column.cssClass.includeHeader ? column.cssClass.name : ''\"\n      [class.pinned-left]=\"column.pinned\"\n      [style.left]=\"styleService.pinnedWidth(column.pinned, colIndex)\">\n      <table-header\n        *ngIf=\"getColumnDefinition(column)\"\n        (update)=\"onSearch($event)\"\n        [column]=\"column\">\n      </table-header>\n    </th>\n  </ng-container>\n  <th *ngIf=\"config.additionalActions || config.detailsTemplate\"></th>\n</tr>\n<ng-container *ngIf=\"filtersTemplate\">\n  <tr>\n    <ng-container [ngTemplateOutlet]=\"filtersTemplate\">\n    </ng-container>\n  </tr>\n</ng-container>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                providers: [StyleService],
                styles: [`
    .cdk-drag-preview {
      text-align: left;
      padding-top: 9px;
      padding-left: 4px;
      color: #50596c;
      border: 1px solid #e7e9ed;
    }
  `]
            }]
    }], function () { return [{ type: StyleService }]; }, { filter: [{
            type: Output
        }], order: [{
            type: Output
        }], selectAll: [{
            type: Output
        }], event: [{
            type: Output
        }], onClick: [{
            type: HostListener,
            args: ['document:click', ['$event.target']]
        }], th: [{
            type: ViewChild,
            args: ['th']
        }], config: [{
            type: Input
        }], columns: [{
            type: Input
        }], sortKey: [{
            type: Input
        }], sortState: [{
            type: Input
        }], selectAllTemplate: [{
            type: Input
        }], filtersTemplate: [{
            type: Input
        }], additionalActionsTemplate: [{
            type: Input
        }], additionalActionMenu: [{
            type: ViewChild,
            args: ['additionalActionMenu']
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BaseModule, { declarations: function () { return [BaseComponent,
        HeaderComponent,
        PaginationComponent,
        TableTHeadComponent,
        SearchPipe,
        RenderPipe,
        GlobalSearchPipe,
        SortPipe]; }, imports: function () { return [CommonModule,
        NgxPaginationModule,
        DragDropModule,
        ScrollingModule]; }, exports: function () { return [BaseComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    BaseComponent,
                    HeaderComponent,
                    PaginationComponent,
                    TableTHeadComponent,
                    // Pipes
                    SearchPipe,
                    RenderPipe,
                    GlobalSearchPipe,
                    SortPipe,
                ],
                imports: [
                    CommonModule,
                    NgxPaginationModule,
                    DragDropModule,
                    ScrollingModule,
                ],
                exports: [BaseComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TableModule, { imports: function () { return [CommonModule,
        BaseModule]; }, exports: function () { return [BaseComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TableModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, BaseModule],
                exports: [BaseComponent],
                providers: []
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { API, BaseComponent, DefaultConfig, Event, STYLE, THEME, TableModule, DefaultConfigService as ɵa, BaseModule as ɵb, GroupRowsService as ɵc, StyleService as ɵd, HeaderComponent as ɵe, PaginationComponent as ɵf, TableTHeadComponent as ɵg, SearchPipe as ɵh, RenderPipe as ɵi, GlobalSearchPipe as ɵj, SortPipe as ɵk };

//# sourceMappingURL=ngx-easy-table.js.map